var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/APIRoutes.html",[0,0.093,1,1.709]],["body/classes/APIRoutes.html",[0,0.153,1,2.825,2,2.069,3,0.414,4,0.414,5,0.414,6,4.699,7,3.392,8,0.867,9,4.099,10,2.926,11,1.698,12,0.414,13,3.592,14,5.445,15,5.445,16,2.486,17,4.099,18,0.826,19,4.099,20,4.099,21,4.099,22,3.392,23,4.099,24,0.48,25,0.036,26,1.406,27,5.445,28,2.256,29,1.547,30,4.099,31,4.099,32,4.099,33,0.024,34,0.03,35,0.024]],["title/classes/Alert.html",[0,0.093,36,0.786]],["body/classes/Alert.html",[0,0.133,2,2.205,3,0.441,4,0.441,5,0.441,8,0.924,12,0.441,18,0.794,24,0.512,25,0.035,28,2.404,33,0.026,34,0.031,35,0.026,36,1.445,37,3.615,38,3.615,39,3.615,40,3.118,41,2.452,42,3.615,43,1.224,44,4.633,45,0.795,46,4.368,47,4.368]],["title/components/AlertComponent.html",[48,0.308,49,0.786]],["body/components/AlertComponent.html",[0,0.097,3,0.322,4,0.322,5,0.322,8,0.674,12,0.322,18,0.649,24,0.373,25,0.037,33,0.019,34,0.025,35,0.019,36,1.432,45,0.427,48,0.522,49,1.333,50,1.468,51,1.2,52,1.2,53,1.2,54,1.2,55,2.636,56,1.612,57,2.002,58,1.2,59,2.242,60,1.691,61,1.612,62,4.832,63,1.612,64,4.278,65,1.001,66,2.14,67,1.131,68,3.185,69,1.944,70,3.185,71,0.745,72,0.92,73,0.745,74,4.278,75,2.16,76,3.541,77,4.278,78,3.185,79,0.745,80,0.995,81,0.815,82,0.606,83,1.608,84,2.004,85,1.454,86,3.185,87,2.636,88,0.995,89,1.608,90,1.954,91,0.995,92,1.612,93,1.612,94,1.2,95,1.946,96,1.2,97,1.2,98,0.822,99,1.2,100,0.745,101,1.2,102,0.745,103,1.2,104,0.822,105,1.2,106,0.745,107,1.336,108,1.2,109,0.745,110,1.2,111,0.822,112,1.2,113,1.2,114,0.745,115,0.995,116,1.2,117,1.2]],["title/injectables/AlertService.html",[69,1.044,118,1.262]],["body/injectables/AlertService.html",[0,0.092,3,0.305,4,0.305,5,0.305,8,0.872,12,0.305,13,2.943,18,0.829,24,0.353,25,0.037,26,0.778,29,0.857,33,0.018,34,0.024,35,0.018,36,1.58,43,0.965,45,0.63,65,0.965,67,1.238,69,1.414,71,0.965,72,0.785,73,0.965,75,1.522,79,1.182,80,1.467,81,0.785,82,0.574,85,2.731,88,1.287,118,1.708,119,1.897,120,2.495,121,1.947,122,4.518,123,3.177,124,4.123,125,4.698,126,4.123,127,2.082,128,4.123,129,3.015,130,3.412,131,3.015,132,2.943,133,3.434,134,4.123,135,3.015,136,3.412,137,2.594,138,3.015,139,4.123,140,3.015,141,4.123,142,1.249,143,1.897,144,1.693,145,2.153,146,3.015,147,4.123,148,3.015,149,3.015,150,3.015,151,2.153]],["title/components/AppComponent.html",[48,0.308,98,0.786]],["body/components/AppComponent.html",[0,0.077,3,0.256,4,0.256,5,0.256,8,0.535,12,0.256,16,2.135,18,0.752,24,0.296,25,0.037,26,1.279,33,0.015,34,0.021,35,0.015,36,1.103,41,2.047,43,0.853,45,0.627,48,0.521,49,0.653,50,1.251,51,0.954,52,0.954,53,0.954,54,0.954,58,0.954,59,2.148,60,1.664,61,1.374,63,1.374,65,0.853,67,1,69,1.867,71,0.592,72,0.814,73,0.592,76,3.017,79,0.592,80,0.79,81,0.944,82,0.482,83,1.278,85,1.665,87,3.017,88,1.335,90,1.156,91,0.79,92,1.374,93,1.374,94,0.954,95,1.762,96,0.954,97,0.954,98,1.207,99,0.954,100,0.592,101,0.954,102,0.592,103,0.954,104,0.653,105,0.954,106,0.592,107,1.139,108,0.954,109,0.592,110,0.954,111,0.653,112,0.954,113,0.954,114,0.592,115,0.79,116,0.954,117,0.954,121,1.049,142,1.049,144,2.047,152,2.094,153,4.273,154,3.646,155,4.273,156,2.603,157,1.931,158,4.589,159,2.094,160,3.646,161,2.606,162,2.053,163,2.688,164,2.047,165,2.531,166,2.047,167,3.646,168,2.688,169,2.603,170,1.841,171,3.646,172,3.646,173,1.421,174,0.868,175,2.531,176,2.531,177,1.421,178,2.531,179,1.278,180,2.531,181,0.954,182,1.214,183,1.278,184,1.421,185,2.094,186,2.531,187,1.421,188,1.278,189,2.531,190,3.017,191,3.017,192,3.646]],["title/modules/AppModule.html",[193,1.915,194,1.915]],["body/modules/AppModule.html",[0,0.087,3,0.289,4,0.289,5,0.289,24,0.335,25,0.037,33,0.017,34,0.023,35,0.017,49,1.386,60,0.812,75,1.443,81,1.149,82,0.544,91,0.892,98,1.52,100,1.257,102,1.257,104,1.386,106,1.257,109,1.257,111,1.386,114,1.257,123,1.798,168,1.798,193,1.798,194,3.899,195,1.604,196,1.798,197,3.779,198,3.704,199,3.288,200,2.04,201,2.365,202,2.365,203,2.365,204,2.365,205,3.014,206,3.288,207,2.857,208,3.288,209,3.973,210,2.365,211,2.04,212,3.288,213,3.973,214,3.973,215,1.604,216,2.857,217,2.365,218,2.857,219,2.365,220,3.973,221,2.04,222,3.288,223,2.04,224,2.04,225,2.857,226,2.365,227,3.288,228,1.798,229,2.365,230,2.857,231,1.798,232,2.365,233,3.973,234,3.973,235,2.04,236,2.365,237,2.857,238,2.04,239,2.857]],["title/modules/AppRoutingModule.html",[193,1.915,205,1.709]],["body/modules/AppRoutingModule.html",[0,0.111,3,0.369,4,0.369,5,0.369,11,2.139,24,0.427,25,0.037,33,0.021,34,0.027,35,0.021,48,0.569,81,1.13,82,0.695,100,1.095,102,1.095,106,1.095,109,1.095,114,1.095,115,1.139,174,1.251,181,1.375,195,2.048,200,2.605,205,2.626,208,3.019,212,3.871,217,3.019,219,3.019,226,3.019,227,3.871,228,2.295,229,3.019,231,2.295,232,3.019,240,3.649,241,3.649,242,4.678,243,3.426,244,3.649,245,3.649,246,5.761,247,3.649,248,2.943,249,3.649,250,3.019,251,2.295,252,4.273,253,3.649,254,3.649,255,3.649]],["title/guards/AuthGuardService.html",[243,1.915,256,2.174]],["body/guards/AuthGuardService.html",[0,0.117,3,0.389,4,0.389,5,0.389,12,0.389,18,0.735,24,0.451,25,0.037,26,1.367,29,1.375,33,0.023,34,0.028,35,0.023,43,0.901,45,0.516,56,1.451,65,1.133,67,0.901,71,0.901,72,0.733,73,0.901,79,0.901,81,1.058,82,0.733,118,2.006,143,2.422,144,2.162,156,2.738,157,2.034,159,3.187,170,2.444,174,1.66,177,2.162,179,1.944,243,3.045,252,4.835,257,3.851,258,4.381,259,3.187,260,3.851,261,3.851,262,3.187,263,2.749,264,3.187,265,1.944]],["title/components/DashboardComponent.html",[48,0.308,100,0.713]],["body/components/DashboardComponent.html",[0,0.13,3,0.255,4,0.255,5,0.255,8,0.534,12,0.255,16,2.26,18,0.751,24,0.295,25,0.037,26,0.939,29,0.717,33,0.015,34,0.021,35,0.015,41,2.042,43,0.851,45,0.626,48,0.472,49,0.651,50,1.248,51,0.951,52,0.951,53,0.951,54,0.951,56,1.37,57,1.767,58,0.951,59,2.146,60,1.619,61,1.37,63,1.37,65,0.851,66,1.934,67,0.998,71,0.851,72,0.889,73,0.851,79,0.851,80,1.136,81,0.889,82,0.48,84,1.587,88,1.136,91,0.788,92,1.37,93,1.37,94,0.951,95,1.759,96,0.951,97,0.951,98,0.651,99,0.951,100,1.093,101,0.951,102,0.59,103,0.951,104,0.651,105,0.951,106,0.59,107,1.731,108,0.951,109,0.59,110,0.951,111,0.651,112,0.951,113,0.951,114,0.59,115,0.788,116,0.951,117,0.951,130,3.01,177,1.416,181,0.951,182,1.212,248,3.422,266,2.088,267,4.265,268,3.637,269,3.197,270,2.569,271,4.398,272,2.088,273,3.637,274,4.265,275,3.01,276,1.934,277,2.523,278,2.523,279,3.637,280,2.523,281,1.587,282,1.416,283,2.088,284,2.088,285,2.523,286,3.637,287,2.523,288,2.523,289,2.523,290,2.523,291,2.523,292,3.637,293,2.523,294,3.637,295,2.597,296,3.01,297,2.597,298,2.523,299,2.523,300,2.523,301,2.523,302,2.523,303,2.088,304,2.523,305,2.523,306,2.523]],["title/classes/Helper.html",[0,0.093,269,1.709]],["body/classes/Helper.html",[0,0.15,2,2,3,0.542,4,0.4,5,0.4,8,1.042,12,0.4,18,0.601,24,0.464,25,0.037,28,2.391,29,1.524,33,0.023,34,0.029,35,0.023,45,0.719,65,1.153,71,0.927,72,1.021,73,0.927,79,0.927,88,1.237,137,3.099,269,3.01,307,3.277,308,3.96,309,3.96,310,3.96,311,3.96,312,4.927,313,4.927,314,3.96,315,4.077,316,2.914,317,3.96,318,5.363,319,2.488,320,2.491,321,2]],["title/components/LoginComponent.html",[48,0.308,102,0.713]],["body/components/LoginComponent.html",[0,0.06,3,0.198,4,0.198,5,0.198,8,0.413,11,1.519,12,0.198,18,0.712,24,0.229,25,0.037,26,0.946,29,0.555,33,0.018,34,0.018,35,0.011,36,1.336,41,2.057,43,0.704,45,0.491,48,0.416,49,0.505,50,1.032,51,0.737,52,0.737,53,0.737,54,0.737,56,1.133,57,1.519,58,0.737,59,2.026,60,1.527,61,1.133,63,1.133,65,0.704,66,1.705,67,0.858,69,1.73,71,0.457,72,0.698,73,0.457,79,0.858,80,1.145,81,0.893,82,0.372,83,0.987,88,1.285,89,0.987,90,1.674,91,0.61,92,1.133,93,1.133,94,0.737,95,1.551,96,0.737,97,0.737,98,0.505,99,0.737,100,0.457,101,0.737,102,0.963,103,0.737,104,0.505,105,0.737,106,0.457,107,0.939,108,0.737,109,0.457,110,0.737,111,0.505,112,1.133,113,0.737,114,0.457,115,1.145,116,0.737,117,0.737,121,1.246,127,1.519,137,1.23,142,0.81,145,2.147,156,2.455,157,1.73,161,1.851,162,1.246,173,1.097,174,0.671,181,1.551,182,1.041,183,1.851,184,1.688,187,2.057,188,1.851,191,1.618,215,1.097,248,1.23,251,3.749,263,1.396,315,2.489,319,0.987,320,1.23,321,0.987,322,1.618,323,3.665,324,3.007,325,3.665,326,2.938,327,4.115,328,1.396,329,3.489,330,3.007,331,2.489,332,3.694,333,3.007,334,2.489,335,3.007,336,3.007,337,1.955,338,1.955,339,2.147,340,2.489,341,3.033,342,3.172,343,1.955,344,3.007,345,1.892,346,2.489,347,1.955,348,2.147,349,1.396,350,2.147,351,1.955,352,1.396,353,2.306,354,2.147,355,2.306,356,1.618,357,1.396,358,1.955,359,1.396,360,1.955,361,1.955,362,1.955,363,1.955,364,1.519,365,1.618,366,1.955,367,1.618,368,1.396,369,1.396,370,1.955,371,1.618,372,1.618,373,1.955,374,1.396,375,1.955,376,1.955,377,2.147,378,1.955,379,1.396,380,1.396,381,1.396,382,1.955,383,1.955,384,2.147,385,1.618,386,1.618,387,1.688,388,2.489,389,1.618,390,1.955,391,1.618,392,1.396,393,1.618]],["title/components/NotificationComponent.html",[48,0.308,104,0.786]],["body/components/NotificationComponent.html",[0,0.112,3,0.373,4,0.2,5,0.2,8,0.419,12,0.2,16,2.683,18,0.745,22,3.429,24,0.232,25,0.037,26,0.784,29,1.177,33,0.012,34,0.018,35,0.012,36,1.217,42,3.902,43,0.711,45,0.555,48,0.373,49,0.511,50,1.042,51,0.746,52,0.746,53,0.746,54,0.746,56,1.144,57,1.531,58,0.746,59,2.032,60,1.532,61,1.144,63,1.144,65,0.711,66,1.717,67,0.865,71,0.711,72,0.789,73,0.711,79,0.97,80,0.949,81,0.789,82,0.377,84,1.911,85,0.904,88,0.949,91,0.618,92,1.144,93,1.144,94,0.746,95,1.998,96,0.746,97,0.746,98,0.511,99,0.746,100,0.463,101,0.746,102,0.463,103,0.746,104,1.07,105,0.746,106,0.463,107,1.749,108,0.746,109,0.463,110,0.746,111,0.511,112,0.746,113,0.746,114,0.463,115,0.618,116,0.746,117,0.746,122,2.514,127,1.534,133,1.911,145,1.414,161,1.866,166,2.647,170,1,177,1.112,182,0.563,265,1,269,3.027,270,2.421,272,1.639,276,1.717,281,1.246,282,1.112,283,1.639,284,1.639,295,2.168,297,2.168,319,1.534,321,1.534,345,1.911,384,3.505,392,1.414,394,1.639,395,3.695,396,3.037,397,4.143,398,3.037,399,3.037,400,1.98,401,4.143,402,1.98,403,2.514,404,3.037,405,3.037,406,3.037,407,3.695,408,3.902,409,4.192,410,1.98,411,1.98,412,3.037,413,3.037,414,3.037,415,1.98,416,1.98,417,1.98,418,1.98,419,1.98,420,1.98,421,1.98,422,3.037,423,3.037,424,1.98,425,1.98,426,1.98,427,1.98,428,1.98,429,1.98,430,1.639,431,1.98,432,4.143,433,3.037,434,1.639,435,3.037,436,3.037,437,3.037,438,1.98,439,1.98,440,1.98,441,1.98,442,1.98,443,1.98,444,1.98,445,1.98,446,1.98,447,1.98,448,3.695,449,3.695,450,3.695]],["title/components/NotificationDetailComponent.html",[48,0.308,106,0.713]],["body/components/NotificationDetailComponent.html",[0,0.056,3,0.184,4,0.184,5,0.184,8,0.386,12,0.184,18,0.748,24,0.214,25,0.037,26,0.736,29,0.997,33,0.011,34,0.017,35,0.011,36,1.273,39,2.359,41,1.024,43,0.667,45,0.531,48,0.401,49,0.471,50,0.978,51,0.687,52,0.687,53,0.687,54,0.687,56,1.074,57,1.454,58,0.687,59,1.99,60,1.501,61,1.074,63,1.074,65,0.667,66,1.643,67,0.821,69,1.691,71,0.821,72,0.668,73,0.427,79,0.928,80,1.239,81,0.965,82,0.347,83,0.921,84,1.148,85,1.811,88,1.344,90,1.602,91,0.57,92,1.074,93,1.074,94,0.687,95,1.494,96,0.687,97,0.687,98,0.471,99,0.687,100,0.427,101,0.687,102,0.427,103,0.687,104,0.471,105,0.687,106,0.928,107,1.864,108,0.687,109,0.427,110,0.687,111,0.471,112,1.074,113,0.687,114,0.427,115,0.57,116,0.687,117,0.687,121,1.643,123,1.793,127,1.439,132,1.302,133,1.793,142,0.756,156,2.251,157,0.626,161,1.439,163,2.207,164,1.6,166,2.226,169,2.035,173,1.024,174,0.626,177,1.024,181,1.621,182,0.997,183,1.771,184,1.6,187,1.024,188,1.771,231,3.188,248,1.148,270,2.251,276,1.454,281,1.148,282,1.024,296,2.359,316,2.49,319,0.921,321,0.921,345,1.793,350,1.302,364,0.921,371,2.359,403,2.359,451,3.618,452,1.51,453,2.85,454,3.508,455,2.85,456,2.903,457,4.289,458,3.282,459,3.966,460,3.282,461,2.359,462,1.824,463,3.282,464,3.282,465,2.85,466,3.508,467,2.85,468,3.282,469,2.85,470,2.85,471,1.824,472,1.824,473,3.256,474,2.035,475,1.824,476,1.824,477,2.85,478,3.508,479,1.824,480,2.85,481,2.359,482,2.359,483,1.824,484,2.035,485,1.302,486,1.302,487,1.51,488,1.824,489,1.824,490,1.824,491,1.824,492,1.824,493,1.824,494,1.51,495,1.824,496,1.824,497,1.824,498,1.824,499,1.51,500,1.51,501,1.51,502,1.302,503,1.824,504,2.85,505,1.824,506,1.824,507,1.824,508,1.824,509,1.51,510,1.824,511,1.824,512,1.51,513,2.035,514,2.035,515,2.85,516,2.85,517,2.035,518,2.359]],["title/components/NotificationGeneratorComponent.html",[48,0.308,109,0.713]],["body/components/NotificationGeneratorComponent.html",[0,0.05,3,0.166,4,0.166,5,0.166,8,0.555,12,0.166,16,1.497,18,0.744,24,0.193,25,0.037,29,1.063,33,0.01,34,0.015,35,0.01,36,1.056,43,0.614,45,0.548,48,0.378,49,0.424,50,0.9,51,0.619,52,0.619,53,0.619,54,0.619,56,0.989,57,1.358,58,0.619,59,1.934,60,1.458,61,0.989,63,0.989,65,0.614,66,1.551,67,0.767,69,1.631,71,0.614,72,0.713,73,0.614,79,0.957,80,1.278,81,0.957,82,0.313,83,0.83,85,1.709,88,1.43,89,0.83,90,1.199,91,0.513,92,0.989,93,0.989,94,0.619,95,1.41,96,0.619,97,0.619,98,0.424,99,0.619,100,0.385,101,0.619,102,0.385,103,0.619,104,0.424,105,0.619,106,0.385,107,1.733,108,0.619,109,0.876,110,0.619,111,0.424,112,1.541,113,0.619,114,0.385,115,0.513,116,0.619,117,0.619,121,1.695,127,2.401,133,1.651,142,0.681,157,1.631,161,2.202,162,1.088,163,2.354,164,2.101,166,1.474,169,1.874,170,1.655,173,0.923,174,0.564,179,1.326,181,1.541,182,1.063,183,1.326,184,0.923,187,1.84,188,1.326,215,0.923,228,3.162,265,1.326,270,2.171,276,0.681,281,1.034,282,0.923,295,1.174,297,1.174,303,2.172,316,2.802,319,0.83,326,2.672,328,1.174,329,3.268,332,3.588,340,2.172,342,2.34,345,1.651,346,2.172,348,1.874,349,1.174,352,1.174,354,2.34,357,1.874,359,1.174,364,0.83,368,1.874,369,1.874,377,1.874,379,1.174,380,1.174,381,1.174,451,3.588,456,2.712,457,3.934,458,3.097,460,2.172,463,3.097,464,3.097,473,2.672,474,1.874,481,3.097,482,2.172,484,1.174,485,1.174,486,1.174,487,1.36,499,1.36,500,1.36,501,1.36,502,1.174,512,2.172,513,2.34,514,2.34,517,2.672,518,3.097,519,1.36,520,2.625,521,3.278,522,2.625,523,3.278,524,3.278,525,3.743,526,2.625,527,2.625,528,2.625,529,1.644,530,1.644,531,2.625,532,1.644,533,2.625,534,1.644,535,2.573,536,2.625,537,1.644,538,1.034,539,3.278,540,2.625,541,2.625,542,1.644,543,2.625,544,1.644,545,2.625,546,1.644,547,1.644,548,1.174,549,1.644,550,1.644,551,1.644,552,1.644,553,1.644,554,1.644,555,1.644,556,1.644,557,1.644,558,1.644,559,1.644,560,1.644,561,1.644,562,1.644,563,3.743]],["title/injectables/NotificationService.html",[118,1.262,270,1.39]],["body/injectables/NotificationService.html",[0,0.06,1,1.109,3,0.2,4,0.2,5,0.2,8,0.418,10,1.41,11,0.818,12,0.2,13,2.164,16,2.038,18,0.788,24,0.231,25,0.038,26,1.068,28,1.849,29,1.475,33,0.03,34,0.018,35,0.012,36,1.068,43,0.709,44,2.509,45,0.631,60,1.048,65,0.709,67,0.462,69,1.682,71,1.185,72,0.988,73,1.215,79,1.102,80,0.617,81,1.026,82,0.376,88,0.947,89,0.997,90,0.902,107,1.654,118,1.256,119,1.242,121,2.151,132,1.41,136,2.509,142,0.818,143,1.242,144,1.109,156,2.24,157,1.682,174,0.677,181,1.39,182,0.861,183,0.997,188,0.997,221,1.41,262,1.634,265,0.997,270,1.384,271,2.509,275,2.509,276,1.714,282,1.109,316,0.997,320,2.321,321,0.997,331,2.509,350,1.41,364,0.997,387,1.109,486,1.41,509,2.509,535,1.907,538,2.603,548,1.41,564,1.41,565,3.031,566,3.031,567,3.689,568,1.634,569,3.424,570,3.031,571,2.954,572,3.031,573,1.975,574,4.525,575,1.975,576,3.031,577,1.975,578,4.138,579,3.031,580,3.031,581,4.464,582,1.975,583,5.061,584,4.464,585,2.509,586,3.031,587,1.975,588,3.031,589,1.975,590,1.975,591,1.975,592,1.41,593,2.164,594,1.975,595,1.634,596,1.634,597,1.975,598,1.242,599,1.41,600,1.41,601,2.164,602,1.634,603,3.031,604,3.689,605,3.031,606,3.031,607,3.031,608,1.975,609,3.424,610,1.975,611,1.975,612,1.975,613,1.975,614,1.975,615,1.975,616,1.975,617,1.975,618,1.975,619,3.689,620,1.975,621,1.975,622,3.031,623,3.031,624,3.031,625,1.975,626,1.975,627,1.975,628,1.975,629,1.975,630,1.975,631,1.975,632,1.975,633,1.634,634,1.975,635,1.975]],["title/components/PageTitleComponent.html",[48,0.308,111,0.786]],["body/components/PageTitleComponent.html",[0,0.097,3,0.32,4,0.32,5,0.32,12,0.32,18,0.732,24,0.371,25,0.037,28,1.768,33,0.019,34,0.025,35,0.019,45,0.425,48,0.521,49,0.819,50,1.463,51,1.195,52,1.195,53,1.195,54,1.195,56,1.608,57,1.998,58,1.195,59,2.24,60,1.689,61,1.608,63,1.608,65,0.998,66,2.137,67,1.128,72,0.812,79,0.742,80,0.99,81,0.604,82,0.604,91,0.99,92,1.608,93,1.608,94,1.195,95,1.943,96,1.195,97,1.195,98,0.819,99,1.195,100,0.742,101,1.195,102,0.742,103,1.195,104,0.819,105,1.195,106,0.742,107,1.332,108,1.195,109,0.742,110,1.195,111,1.331,112,2.198,113,1.195,114,0.742,115,0.99,116,1.195,117,1.195,164,1.78,238,3.681,461,3.531,484,3.046,636,4.267,637,2.625,638,5.833,639,4.821,640,4.267,641,4.267,642,4.267,643,4.267,644,3.172,645,3.172]],["title/components/RegisterComponent.html",[48,0.308,114,0.713]],["body/components/RegisterComponent.html",[0,0.06,3,0.199,4,0.199,5,0.199,8,0.417,12,0.199,18,0.715,24,0.231,25,0.037,26,0.952,29,0.56,33,0.012,34,0.018,35,0.012,36,1.306,43,0.709,45,0.494,48,0.476,49,0.509,50,1.039,51,0.743,52,0.743,53,0.743,54,0.743,56,1.141,57,1.527,58,0.743,59,2.03,60,1.531,61,1.141,63,1.141,65,0.709,66,1.713,67,0.863,69,1.735,71,0.462,72,0.849,73,0.462,79,0.863,80,1.151,81,0.896,82,0.376,83,0.996,85,1.383,88,1.291,89,0.996,90,1.683,91,0.616,92,1.141,93,1.141,94,0.743,95,1.558,96,0.743,97,0.743,98,0.509,99,0.743,100,0.462,101,0.743,102,0.462,103,0.743,104,0.509,105,0.743,106,0.462,107,0.946,108,0.743,109,0.462,110,0.743,111,0.509,112,1.389,113,0.743,114,0.968,115,1.779,116,0.743,117,0.743,121,1.255,127,1.529,137,1.241,142,0.817,156,2.46,157,1.735,161,1.861,162,1.527,163,2.319,164,1.7,166,1.7,173,1.107,174,0.677,181,1.558,182,1.047,183,1.861,184,1.7,187,2.069,188,1.861,215,1.107,250,2.506,251,2.601,263,1.408,264,1.632,321,1.529,326,2.952,328,1.408,329,3.5,332,3.612,334,2.506,339,2.162,341,2.506,342,3.185,348,2.162,349,1.408,352,1.408,353,2.806,354,2.632,355,2.319,356,1.632,357,2.632,359,1.408,364,0.996,365,1.632,368,1.408,369,1.408,372,2.506,374,1.408,377,2.162,379,1.408,380,1.408,381,1.408,384,2.162,385,1.632,386,1.632,387,1.7,388,2.506,389,1.632,391,1.632,392,1.408,393,1.632,571,1.408,585,1.632,646,1.632,647,3.686,648,3.028,649,3.686,650,4.135,651,3.028,652,3.028,653,1.973,654,1.973,655,1.973,656,3.686,657,3.686,658,3.028,659,1.973,660,1.973,661,1.973,662,1.408,663,1.973,664,1.973,665,1.973,666,1.973,667,3.028,668,1.973,669,1.973,670,1.973,671,1.973,672,1.973,673,1.973,674,1.973,675,1.973,676,1.973,677,1.973]],["title/classes/User.html",[0,0.093,162,1.262]],["body/classes/User.html",[0,0.151,2,2.015,3,0.403,4,0.403,5,0.403,8,0.844,12,0.403,18,0.854,24,0.467,25,0.035,26,1.598,28,2.502,33,0.023,34,0.029,35,0.023,40,2.85,43,1.159,45,0.754,75,2.015,162,2.331,185,3.303,353,3.385,355,3.385,662,3.842,678,3.303,679,3.303,680,3.991,681,3.991,682,4.453,683,3.991,684,3.991,685,3.991,686,3.991]],["title/classes/UserNotification.html",[0,0.093,276,1.262]],["body/classes/UserNotification.html",[0,0.151,2,1.693,3,0.339,4,0.339,5,0.339,8,0.709,12,0.339,16,2.021,18,0.885,24,0.393,25,0.037,26,1.61,28,2.487,33,0.02,34,0.026,35,0.02,38,3.664,43,1.036,45,0.781,67,0.785,71,0.785,72,0.638,73,0.785,81,0.638,170,2.235,179,1.693,276,1.834,316,2.899,513,3.539,514,3.539,548,2.393,682,4.102,687,2.774,688,4.957,689,4.957,690,5.482,691,4.427,692,4.427,693,3.352,694,3.352,695,3.352,696,3.664,697,3.352,698,3.352,699,3.352,700,3.352,701,3.352,702,3.352,703,3.352,704,3.352,705,3.352,706,3.352]],["title/injectables/UserService.html",[118,1.262,157,1.044]],["body/injectables/UserService.html",[0,0.077,1,1.428,3,0.257,4,0.257,5,0.257,10,1.816,11,1.054,12,0.257,18,0.827,24,0.298,25,0.037,26,1.106,28,2.445,29,1.469,33,0.015,34,0.021,35,0.015,36,0.657,40,1.816,43,0.856,45,0.693,65,0.856,67,0.595,71,1.003,72,0.816,73,1.003,75,1.284,79,1.162,81,1.057,82,0.484,89,1.284,115,1.143,118,1.516,119,1.6,121,1.942,142,1.054,143,1.6,144,1.428,151,1.816,156,2.573,157,1.255,158,3.878,162,2.301,170,2.366,174,0.872,179,1.284,181,1.379,182,0.723,221,1.816,222,4.409,223,1.816,224,3.059,251,2.302,265,1.284,353,3.43,355,3.545,364,2.507,374,1.816,387,1.428,535,1.6,538,1.6,568,2.105,569,3.878,571,2.612,574,4.109,592,1.816,593,2.612,595,2.105,596,2.105,598,2.302,599,1.816,600,1.816,609,2.105,662,3.059,679,2.105,707,1.816,708,4.686,709,3.659,710,2.544,711,2.544,712,3.659,713,2.544,714,2.544,715,3.659,716,2.544,717,2.544,718,2.544,719,2.544,720,4.965,721,2.544,722,2.544,723,2.544,724,3.659,725,2.544,726,2.544,727,2.544,728,2.544,729,2.544,730,2.544,731,2.544]],["title/coverage.html",[732,3.435]],["body/coverage.html",[0,0.166,1,1.841,5,0.331,6,2.715,7,2.715,25,0.037,33,0.019,34,0.026,35,0.019,36,0.847,37,2.715,45,0.44,48,0.593,49,0.847,55,2.715,69,1.125,98,0.847,100,0.768,102,0.768,104,0.847,106,0.768,109,0.768,111,0.847,114,0.768,118,2.032,120,2.715,152,2.715,157,1.125,162,1.359,182,0.932,228,2.064,231,2.064,238,2.342,243,2.064,256,2.342,258,2.715,259,2.715,266,2.715,269,1.841,270,1.498,276,1.359,307,2.715,322,2.715,394,2.715,430,2.715,451,3.116,452,2.715,494,4.726,519,2.715,564,3.501,598,2.745,601,2.342,636,2.715,637,2.715,646,2.715,678,2.715,687,2.715,707,3.116,732,2.715,733,3.281,734,3.281,735,3.281,736,4.364,737,3.281,738,4.904,739,4.904,740,3.281,741,3.281,742,3.281,743,4.364,744,4.364,745,3.281,746,3.281,747,3.281,748,3.281,749,3.281,750,3.281,751,3.281,752,3.281,753,3.281,754,3.281,755,3.281,756,4.364,757,4.364,758,3.281,759,5.442,760,5.442,761,3.281,762,2.715,763,3.611,764,2.715,765,3.281,766,3.281]],["title/dependencies.html",[196,2.303,767,2.545]],["body/dependencies.html",[25,0.037,33,0.024,34,0.029,35,0.024,75,2.042,82,0.77,174,1.387,196,2.544,198,3.865,210,4.13,211,3.563,215,2.27,223,3.563,224,2.887,235,2.887,236,3.347,485,2.887,592,2.887,768,4.044,769,6.054,770,4.044,771,4.991,772,4.044,773,4.044,774,4.044,775,4.044,776,4.044,777,4.044,778,4.044,779,4.044,780,4.044,781,4.044,782,4.044,783,4.044,784,4.044,785,4.044,786,4.044,787,4.044,788,4.044]],["title/miscellaneous/enumerations.html",[789,1.601,790,3.029]],["body/miscellaneous/enumerations.html",[3,0.475,12,0.475,25,0.032,33,0.028,34,0.032,35,0.028,107,1.469,316,2.759,319,2.375,320,2.959,473,3.358,474,3.358,789,2.959,790,3.893,791,4.704,792,4.704,793,4.704]],["title/index.html",[12,0.257,468,2.106,794,2.545]],["body/index.html",[4,0.383,25,0.028,33,0.022,34,0.028,35,0.022,48,0.531,60,1.078,72,0.722,168,2.386,182,1.078,190,3.139,235,4.219,339,2.708,367,4.351,409,3.139,434,3.139,517,2.708,633,3.968,795,3.793,796,4.795,797,5.258,798,5.258,799,3.793,800,3.793,801,3.793,802,4.795,803,5.698,804,3.793,805,3.793,806,3.793,807,3.793,808,3.793,809,3.793,810,3.793,811,3.793,812,3.793,813,3.793,814,5.258,815,3.793,816,5.698,817,3.793,818,3.793,819,3.793,820,3.793,821,3.793,822,3.793,823,3.139,824,4.795,825,5.525,826,4.795,827,4.795,828,3.793,829,5.525,830,3.793,831,3.793,832,3.793,833,5.258,834,3.793]],["title/modules.html",[195,2.33]],["body/modules.html",[25,0.032,33,0.028,34,0.032,35,0.028,194,2.996,195,2.673,205,2.673,211,3.4,835,4.762,836,4.762,837,5.503,838,4.762,839,4.762]],["title/overview.html",[840,3.435]],["body/overview.html",[2,1.897,11,1.556,25,0.036,33,0.022,34,0.028,35,0.022,49,1.351,50,1.288,91,1.173,98,1.522,100,1.225,102,1.225,104,1.351,106,1.225,109,1.225,111,1.351,114,1.225,119,2.363,123,2.363,151,2.682,168,2.363,193,2.363,194,3.972,195,2.108,196,2.363,197,3.108,198,2.682,199,3.108,200,2.682,201,3.108,202,3.108,203,3.108,204,3.108,205,2.938,206,3.943,256,2.682,408,3.108,502,2.682,840,3.108,841,3.756,842,3.756,843,3.756]],["title/routes.html",[11,1.72]],["body/routes.html",[11,2.03,25,0.033,33,0.029,34,0.033,35,0.029]],["title/miscellaneous/variables.html",[789,1.601,844,3.029]],["body/miscellaneous/variables.html",[12,0.396,25,0.037,33,0.023,34,0.029,35,0.023,45,0.798,179,1.979,182,1.391,265,1.979,387,2.748,535,3.62,538,3.62,564,2.798,593,3.495,598,3.517,599,3.495,600,3.495,601,3.495,602,3.244,696,3.244,707,2.798,762,3.244,763,4.626,764,3.244,789,2.466,823,4.051,844,3.244,845,3.92,846,3.92,847,4.895,848,3.92,849,5.59]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":494,"title":{},"body":{"components/NotificationDetailComponent.html":{},"coverage.html":{}}}],["0.2rem",{"_index":443,"title":{},"body":{"components/NotificationComponent.html":{}}}],["0.3rem",{"_index":436,"title":{},"body":{"components/NotificationComponent.html":{}}}],["0.8",{"_index":438,"title":{},"body":{"components/NotificationComponent.html":{}}}],["0.8.26",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":151,"title":{},"body":{"injectables/AlertService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["1.0",{"_index":445,"title":{},"body":{"components/NotificationComponent.html":{}}}],["1.9.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["1rem",{"_index":432,"title":{},"body":{"components/NotificationComponent.html":{}}}],["2",{"_index":502,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":430,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["20rem",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["25",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":842,"title":{},"body":{"overview.html":{}}}],["3.2.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":407,"title":{},"body":{"components/NotificationComponent.html":{}}}],["4.1.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":408,"title":{},"body":{"components/NotificationComponent.html":{},"overview.html":{}}}],["5/6",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":843,"title":{},"body":{"overview.html":{}}}],["6.3.3",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":800,"title":{},"body":{"index.html":{}}}],["7.3.5",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":841,"title":{},"body":{"overview.html":{}}}],["9/10",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["90000",{"_index":602,"title":{},"body":{"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":682,"title":{},"body":{"classes/User.html":{},"classes/UserNotification.html":{}}}],["accessors",{"_index":13,"title":{},"body":{"classes/APIRoutes.html":{},"injectables/AlertService.html":{},"injectables/NotificationService.html":{}}}],["activatedroute",{"_index":464,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["actual_component",{"_index":117,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["add",{"_index":136,"title":{},"body":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{}}}],["add(notification",{"_index":572,"title":{},"body":{"injectables/NotificationService.html":{}}}],["added",{"_index":560,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["adding",{"_index":620,"title":{},"body":{"injectables/NotificationService.html":{}}}],["again",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert",{"_index":36,"title":{"classes/Alert.html":{}},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["alert'},{'name",{"_index":97,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["alert.component.css",{"_index":62,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.component.html",{"_index":64,"title":{},"body":{"components/AlertComponent.html":{}}}],["alert.message",{"_index":90,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["alert.service",{"_index":597,"title":{},"body":{"injectables/NotificationService.html":{}}}],["alert.type",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["alert:hover",{"_index":444,"title":{},"body":{"components/NotificationComponent.html":{}}}],["alertcomponent",{"_index":49,"title":{"components/AlertComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["alerts",{"_index":85,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["alertservice",{"_index":69,"title":{"injectables/AlertService.html":{}},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"coverage.html":{}}}],["alertslist",{"_index":125,"title":{},"body":{"injectables/AlertService.html":{}}}],["align",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["already",{"_index":673,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":797,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":485,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":82,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["another",{"_index":675,"title":{},"body":{"components/RegisterComponent.html":{}}}],["api",{"_index":10,"title":{},"body":{"classes/APIRoutes.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["api/login",{"_index":30,"title":{},"body":{"classes/APIRoutes.html":{}}}],["api/notification",{"_index":32,"title":{},"body":{"classes/APIRoutes.html":{}}}],["api/register",{"_index":31,"title":{},"body":{"classes/APIRoutes.html":{}}}],["apiroutes",{"_index":1,"title":{"classes/APIRoutes.html":{}},"body":{"classes/APIRoutes.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["apiroutes.notifications",{"_index":606,"title":{},"body":{"injectables/NotificationService.html":{}}}],["app",{"_index":60,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["app.component",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":98,"title":{"components/AppComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":600,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":194,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":205,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":133,"title":{},"body":{"injectables/AlertService.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["artifacts",{"_index":817,"title":{},"body":{"index.html":{}}}],["attaching",{"_index":527,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["authenticating",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{}}}],["authentication",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authguardservice",{"_index":243,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["automatically",{"_index":808,"title":{},"body":{"index.html":{}}}],["available",{"_index":839,"title":{},"body":{"modules.html":{}}}],["back",{"_index":518,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["background",{"_index":448,"title":{},"body":{"components/NotificationComponent.html":{}}}],["behavior",{"_index":77,"title":{},"body":{"components/AlertComponent.html":{}}}],["body",{"_index":514,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"classes/UserNotification.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/NotificationComponent.html":{},"components/NotificationGeneratorComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["bottom",{"_index":433,"title":{},"body":{"components/NotificationComponent.html":{}}}],["box",{"_index":303,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["boxes",{"_index":146,"title":{},"body":{"injectables/AlertService.html":{}}}],["browse",{"_index":837,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":816,"title":{},"body":{"index.html":{}}}],["call",{"_index":665,"title":{},"body":{"components/RegisterComponent.html":{}}}],["canactivate",{"_index":252,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["case",{"_index":318,"title":{},"body":{"classes/Helper.html":{}}}],["catch",{"_index":730,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror",{"_index":594,"title":{},"body":{"injectables/NotificationService.html":{}}}],["catcherror(this.handleerror('delete",{"_index":629,"title":{},"body":{"injectables/NotificationService.html":{}}}],["catcherror(this.handleerror('get",{"_index":611,"title":{},"body":{"injectables/NotificationService.html":{}}}],["catcherror(this.handleerror('update",{"_index":626,"title":{},"body":{"injectables/NotificationService.html":{}}}],["categories",{"_index":473,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":316,"title":{},"body":{"classes/Helper.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"classes/UserNotification.html":{},"miscellaneous/enumerations.html":{}}}],["category.info",{"_index":548,"title":{},"body":{"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"classes/UserNotification.html":{}}}],["categorylist",{"_index":456,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["center",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["change",{"_index":810,"title":{},"body":{"index.html":{}}}],["changed",{"_index":511,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["changes",{"_index":516,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["check",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["checks",{"_index":412,"title":{},"body":{"components/NotificationComponent.html":{}}}],["class",{"_index":0,"title":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"classes/Helper.html":{},"classes/User.html":{},"classes/UserNotification.html":{}},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"classes/Helper.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"overview.html":{}}}],["cli",{"_index":798,"title":{},"body":{"index.html":{}}}],["close",{"_index":122,"title":{},"body":{"injectables/AlertService.html":{},"components/NotificationComponent.html":{}}}],["close(alert",{"_index":128,"title":{},"body":{"injectables/AlertService.html":{}}}],["close(notification",{"_index":399,"title":{},"body":{"components/NotificationComponent.html":{}}}],["closed",{"_index":401,"title":{},"body":{"components/NotificationComponent.html":{}}}],["cluster_appmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":812,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["color",{"_index":449,"title":{},"body":{"components/NotificationComponent.html":{}}}],["colors",{"_index":447,"title":{},"body":{"components/NotificationComponent.html":{}}}],["common/helper",{"_index":283,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{}}}],["common/page",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["component",{"_index":48,"title":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":96,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["components",{"_index":50,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["components/alert/alert.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dashboard/dashboard.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/login/login.component",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/notification",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/notification/notification.component",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["components/register/register.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["conf",{"_index":286,"title":{},"body":{"components/DashboardComponent.html":{}}}],["confirm('are",{"_index":287,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(result",{"_index":291,"title":{},"body":{"components/DashboardComponent.html":{}}}],["console.log(this.user",{"_index":725,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":67,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["constructor(alertservice",{"_index":68,"title":{},"body":{"components/AlertComponent.html":{}}}],["constructor(formbuilder",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(http",{"_index":568,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["constructor(location",{"_index":462,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["constructor(notificationservice",{"_index":272,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{}}}],["constructor(private",{"_index":89,"title":{},"body":{"components/AlertComponent.html":{},"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["constructor(userid",{"_index":691,"title":{},"body":{"classes/UserNotification.html":{}}}],["constructor(userservice",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{}}}],["container",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/RegisterComponent.html":{}}}],["containing",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["contains",{"_index":9,"title":{},"body":{"classes/APIRoutes.html":{}}}],["content",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":585,"title":{},"body":{"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["control",{"_index":76,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{}}}],["controlerrors",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["controlling",{"_index":466,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["controls",{"_index":145,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{}}}],["cookie",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["cookieservice",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["core",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{}}}],["count",{"_index":414,"title":{},"body":{"components/NotificationComponent.html":{}}}],["coverage",{"_index":732,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":41,"title":{},"body":{"classes/Alert.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["creates",{"_index":84,"title":{},"body":{"components/AlertComponent.html":{},"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["creating",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["creation",{"_index":541,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["current",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["danger",{"_index":321,"title":{},"body":{"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["dashboard",{"_index":248,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["dashboard'},{'name",{"_index":101,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["dashboard.component.css",{"_index":267,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":268,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":100,"title":{"components/DashboardComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":688,"title":{},"body":{"classes/UserNotification.html":{}}}],["date.now",{"_index":706,"title":{},"body":{"classes/UserNotification.html":{}}}],["declarations",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":535,"title":{},"body":{"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultcategory",{"_index":523,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["defined",{"_index":18,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["defines",{"_index":793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["delete",{"_index":271,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/NotificationService.html":{}}}],["delete(notification",{"_index":275,"title":{},"body":{"components/DashboardComponent.html":{},"injectables/NotificationService.html":{}}}],["deleting",{"_index":628,"title":{},"body":{"injectables/NotificationService.html":{}}}],["dependencies",{"_index":196,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{}}}],["design",{"_index":300,"title":{},"body":{"components/DashboardComponent.html":{}}}],["detail",{"_index":453,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail'},{'name",{"_index":108,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["detail.component",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["detail.component.css",{"_index":454,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.html",{"_index":455,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts",{"_index":452,"title":{},"body":{"components/NotificationDetailComponent.html":{},"coverage.html":{}}}],["detail.component.ts:25",{"_index":471,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:30",{"_index":465,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:40",{"_index":483,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:48",{"_index":476,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:57",{"_index":475,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:76",{"_index":472,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail.component.ts:84",{"_index":479,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["detail/notification",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotificationDetailComponent.html":{},"coverage.html":{}}}],["details",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["dev",{"_index":805,"title":{},"body":{"index.html":{}}}],["development",{"_index":801,"title":{},"body":{"index.html":{}}}],["directive",{"_index":94,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["directives",{"_index":116,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":815,"title":{},"body":{"index.html":{}}}],["directory",{"_index":820,"title":{},"body":{"index.html":{}}}],["display",{"_index":137,"title":{},"body":{"injectables/AlertService.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["displayed",{"_index":642,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["dist",{"_index":819,"title":{},"body":{"index.html":{}}}],["div",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["documentation",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":53,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["during",{"_index":310,"title":{},"body":{"classes/Helper.html":{}}}],["dynamic",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":731,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":830,"title":{},"body":{"index.html":{}}}],["edit",{"_index":296,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["editing",{"_index":478,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["element",{"_index":93,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["element.isclosed",{"_index":423,"title":{},"body":{"components/NotificationComponent.html":{}}}],["elements",{"_index":315,"title":{},"body":{"classes/Helper.html":{},"components/LoginComponent.html":{}}}],["empty",{"_index":132,"title":{},"body":{"injectables/AlertService.html":{},"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["end",{"_index":829,"title":{},"body":{"index.html":{}}}],["enum",{"_index":474,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":790,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":320,"title":{},"body":{"classes/Helper.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"miscellaneous/enumerations.html":{}}}],["error.message",{"_index":631,"title":{},"body":{"injectables/NotificationService.html":{}}}],["errors",{"_index":531,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["execute",{"_index":826,"title":{},"body":{"index.html":{}}}],["execution",{"_index":311,"title":{},"body":{"classes/Helper.html":{}}}],["exists",{"_index":674,"title":{},"body":{"components/RegisterComponent.html":{}}}],["export",{"_index":24,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["failed",{"_index":584,"title":{},"body":{"injectables/NotificationService.html":{}}}],["failure",{"_index":672,"title":{},"body":{"components/RegisterComponent.html":{}}}],["false",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/NotificationGeneratorComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":477,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["fetches",{"_index":403,"title":{},"body":{"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{}}}],["fetching",{"_index":406,"title":{},"body":{"components/NotificationComponent.html":{}}}],["fields",{"_index":504,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":811,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":429,"title":{},"body":{"components/NotificationComponent.html":{}}}],["flag",{"_index":822,"title":{},"body":{"index.html":{}}}],["flex",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["focus",{"_index":299,"title":{},"body":{"components/DashboardComponent.html":{}}}],["font",{"_index":439,"title":{},"body":{"components/NotificationComponent.html":{}}}],["form",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["formbuilder",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["formgroup",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["formsmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["frontend",{"_index":795,"title":{},"body":{"index.html":{}}}],["fulfills",{"_index":404,"title":{},"body":{"components/NotificationComponent.html":{}}}],["full",{"_index":250,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegisterComponent.html":{}}}],["fullname",{"_index":662,"title":{},"body":{"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["function",{"_index":344,"title":{},"body":{"components/LoginComponent.html":{}}}],["functions",{"_index":308,"title":{},"body":{"classes/Helper.html":{}}}],["further",{"_index":832,"title":{},"body":{"index.html":{}}}],["generate",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["generated",{"_index":434,"title":{},"body":{"components/NotificationComponent.html":{},"index.html":{}}}],["generates",{"_index":546,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generating",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["generator",{"_index":520,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator'},{'name",{"_index":110,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["generator.component",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["generator.component.css",{"_index":521,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.html",{"_index":522,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts",{"_index":519,"title":{},"body":{"components/NotificationGeneratorComponent.html":{},"coverage.html":{}}}],["generator.component.ts:114",{"_index":530,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:26",{"_index":544,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:31",{"_index":542,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:36",{"_index":526,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:54",{"_index":534,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:68",{"_index":529,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:76",{"_index":532,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator.component.ts:84",{"_index":537,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["generator/notification",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotificationGeneratorComponent.html":{},"coverage.html":{}}}],["get(notificationid",{"_index":576,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getalertslist",{"_index":140,"title":{},"body":{"injectables/AlertService.html":{}}}],["getcategories",{"_index":458,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["getdisplaytype",{"_index":312,"title":{},"body":{"classes/Helper.html":{}}}],["getdisplaytype(category",{"_index":313,"title":{},"body":{"classes/Helper.html":{}}}],["getformvalidationerrors",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["getnotification",{"_index":459,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["getnotifications",{"_index":22,"title":{},"body":{"classes/APIRoutes.html":{},"components/NotificationComponent.html":{}}}],["getnotificationslist",{"_index":591,"title":{},"body":{"injectables/NotificationService.html":{}}}],["getter",{"_index":141,"title":{},"body":{"injectables/AlertService.html":{}}}],["getting",{"_index":468,"title":{"index.html":{}},"body":{"components/NotificationDetailComponent.html":{}}}],["getuser_login",{"_index":17,"title":{},"body":{"classes/APIRoutes.html":{}}}],["getuser_register",{"_index":20,"title":{},"body":{"classes/APIRoutes.html":{}}}],["give",{"_index":671,"title":{},"body":{"components/RegisterComponent.html":{}}}],["go",{"_index":517,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"index.html":{}}}],["goback",{"_index":525,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["graph",{"_index":838,"title":{},"body":{"modules.html":{}}}],["group",{"_index":545,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["guard",{"_index":256,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":245,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":259,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:13",{"_index":261,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:9",{"_index":260,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":257,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["hammerjs",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{}}}],["handleerror",{"_index":565,"title":{},"body":{"injectables/NotificationService.html":{}}}],["handleerror(operation",{"_index":580,"title":{},"body":{"injectables/NotificationService.html":{}}}],["handles",{"_index":416,"title":{},"body":{"components/NotificationComponent.html":{}}}],["handling",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["header",{"_index":513,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"classes/UserNotification.html":{}}}],["headers",{"_index":599,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["heading",{"_index":643,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["heading:focus",{"_index":302,"title":{},"body":{"components/DashboardComponent.html":{}}}],["help",{"_index":833,"title":{},"body":{"index.html":{}}}],["helper",{"_index":269,"title":{"classes/Helper.html":{}},"body":{"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/NotificationComponent.html":{},"coverage.html":{}}}],["here",{"_index":294,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":92,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":571,"title":{},"body":{"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":807,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":569,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":593,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["httpoptions",{"_index":598,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpoptions).pipe",{"_index":609,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["id",{"_index":495,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["identifier",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":56,"title":{},"body":{"components/AlertComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["import",{"_index":81,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["info_timeout",{"_index":601,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["information",{"_index":40,"title":{},"body":{"classes/Alert.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["initialize",{"_index":127,"title":{},"body":{"injectables/AlertService.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["initiates",{"_index":279,"title":{},"body":{"components/DashboardComponent.html":{}}}],["injectable",{"_index":118,"title":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":119,"title":{},"body":{"injectables/AlertService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":484,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{}}}],["inputs",{"_index":461,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/PageTitleComponent.html":{}}}],["isauthenticated",{"_index":708,"title":{},"body":{"injectables/UserService.html":{}}}],["isclosed",{"_index":689,"title":{},"body":{"classes/UserNotification.html":{}}}],["iscollapsed",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["js",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["json.parse(this.cookieservice.get('notificationstestuser",{"_index":721,"title":{},"body":{"injectables/UserService.html":{}}}],["json.stringify(userprofile",{"_index":727,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["karma",{"_index":828,"title":{},"body":{"index.html":{}}}],["keep",{"_index":632,"title":{},"body":{"injectables/NotificationService.html":{}}}],["keeping",{"_index":139,"title":{},"body":{"injectables/AlertService.html":{}}}],["keeps",{"_index":679,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["kept",{"_index":427,"title":{},"body":{"components/NotificationComponent.html":{}}}],["key",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["keyerror",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["keys",{"_index":499,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["keys.slice(keys.length",{"_index":501,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["left",{"_index":508,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["legend",{"_index":91,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["length",{"_index":426,"title":{},"body":{"components/NotificationComponent.html":{}}}],["list",{"_index":481,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["location",{"_index":457,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["logerror",{"_index":566,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logerror(message",{"_index":586,"title":{},"body":{"injectables/NotificationService.html":{}}}],["logged",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"classes/User.html":{}}}],["logging",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["login",{"_index":251,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["login'},{'name",{"_index":103,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["login(username",{"_index":712,"title":{},"body":{"injectables/UserService.html":{}}}],["login.component.css",{"_index":323,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":324,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":102,"title":{"components/LoginComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserService.html":{}}}],["looks",{"_index":292,"title":{},"body":{"components/DashboardComponent.html":{}}}],["main",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":664,"title":{},"body":{"components/RegisterComponent.html":{}}}],["margin",{"_index":442,"title":{},"body":{"components/NotificationComponent.html":{}}}],["matching",{"_index":34,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["message",{"_index":44,"title":{},"body":{"classes/Alert.html":{},"injectables/NotificationService.html":{}}}],["messages",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{}}}],["metadata",{"_index":58,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["method",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["methods",{"_index":65,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":789,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":38,"title":{},"body":{"classes/Alert.html":{},"classes/UserNotification.html":{}}}],["models/alert",{"_index":142,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["models/category",{"_index":486,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{}}}],["models/user",{"_index":718,"title":{},"body":{"injectables/UserService.html":{}}}],["models/usernotification",{"_index":282,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{}}}],["module",{"_index":193,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":195,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":409,"title":{},"body":{"components/NotificationComponent.html":{},"index.html":{}}}],["move",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":87,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{}}}],["navigate",{"_index":806,"title":{},"body":{"index.html":{}}}],["navigated",{"_index":533,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["navigating",{"_index":470,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["navigation",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["needed",{"_index":309,"title":{},"body":{"classes/Helper.html":{}}}],["new",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngbaccordionmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":66,"title":{},"body":{"components/AlertComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["ngx",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["none",{"_index":305,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notif",{"_index":301,"title":{},"body":{"components/DashboardComponent.html":{}}}],["notification",{"_index":107,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/enumerations.html":{}}}],["notification'},{'name",{"_index":105,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["notification.body",{"_index":297,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["notification.category",{"_index":555,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["notification.component.css",{"_index":395,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.component.html",{"_index":396,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification.header",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["notification.isclosed",{"_index":419,"title":{},"body":{"components/NotificationComponent.html":{}}}],["notification/:id",{"_index":254,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["notification/new",{"_index":253,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["notificationcomponent",{"_index":104,"title":{"components/NotificationComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationdetailcomponent",{"_index":106,"title":{"components/NotificationDetailComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationform",{"_index":524,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["notificationgeneratorcomponent",{"_index":109,"title":{"components/NotificationGeneratorComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationid",{"_index":578,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notifications",{"_index":16,"title":{},"body":{"classes/APIRoutes.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"classes/UserNotification.html":{}}}],["notificationservice",{"_index":270,"title":{"injectables/NotificationService.html":{}},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notificationslist",{"_index":567,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notify",{"_index":563,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["null",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["number",{"_index":696,"title":{},"body":{"classes/UserNotification.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(controlerrors).foreach(keyerror",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["object.keys(this.categorylist",{"_index":500,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["object.keys(this.loginform.controls).foreach(key",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["object.keys(this.notificationform.controls).foreach(key",{"_index":561,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["object.keys(this.registerform.controls).foreach(key",{"_index":676,"title":{},"body":{"components/RegisterComponent.html":{}}}],["observable",{"_index":574,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["of(result",{"_index":635,"title":{},"body":{"injectables/NotificationService.html":{}}}],["oninit",{"_index":57,"title":{},"body":{"components/AlertComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["onlogin",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{}}}],["onregister",{"_index":650,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsubmit",{"_index":460,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["onsubmit(shouldstay",{"_index":536,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["opacity",{"_index":437,"title":{},"body":{"components/NotificationComponent.html":{}}}],["open",{"_index":130,"title":{},"body":{"injectables/AlertService.html":{},"components/DashboardComponent.html":{}}}],["operation",{"_index":583,"title":{},"body":{"injectables/NotificationService.html":{}}}],["optional",{"_index":73,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["out",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":840,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":767,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":435,"title":{},"body":{"components/NotificationComponent.html":{}}}],["page",{"_index":112,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["pagetitlecomponent",{"_index":111,"title":{"components/PageTitleComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["param",{"_index":88,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["paramid",{"_index":489,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["password",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["path",{"_index":246,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":249,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["please",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["position",{"_index":428,"title":{},"body":{"components/NotificationComponent.html":{}}}],["previous",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["private",{"_index":121,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["prod",{"_index":821,"title":{},"body":{"index.html":{}}}],["production",{"_index":823,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":796,"title":{},"body":{"index.html":{}}}],["properties",{"_index":43,"title":{},"body":{"classes/Alert.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["protractor",{"_index":831,"title":{},"body":{"index.html":{}}}],["provided",{"_index":496,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["providedin",{"_index":143,"title":{},"body":{"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":26,"title":{},"body":{"classes/APIRoutes.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["quick",{"_index":417,"title":{},"body":{"components/NotificationComponent.html":{}}}],["reactiveformsmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["readme",{"_index":834,"title":{},"body":{"index.html":{}}}],["redefining",{"_index":446,"title":{},"body":{"components/NotificationComponent.html":{}}}],["redirectto",{"_index":247,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["register",{"_index":115,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["register(fullname",{"_index":715,"title":{},"body":{"injectables/UserService.html":{}}}],["register.component.css",{"_index":647,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":648,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":114,"title":{"components/RegisterComponent.html":{}},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registered",{"_index":670,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform",{"_index":649,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registering",{"_index":652,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registers",{"_index":656,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":658,"title":{},"body":{"components/RegisterComponent.html":{}}}],["related",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":809,"title":{},"body":{"index.html":{}}}],["request",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{}}}],["requests",{"_index":528,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["requirement",{"_index":405,"title":{},"body":{"components/NotificationComponent.html":{}}}],["reset",{"_index":123,"title":{},"body":{"injectables/AlertService.html":{},"modules/AppModule.html":{},"components/NotificationDetailComponent.html":{},"overview.html":{}}}],["result",{"_index":33,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.category",{"_index":615,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result.fullname",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.isclosed",{"_index":617,"title":{},"body":{"injectables/NotificationService.html":{}}}],["result.length",{"_index":493,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["result.ok",{"_index":669,"title":{},"body":{"components/RegisterComponent.html":{}}}],["result[0",{"_index":498,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["results",{"_index":35,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":29,"title":{},"body":{"classes/APIRoutes.html":{},"injectables/AlertService.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["returning",{"_index":634,"title":{},"body":{"injectables/NotificationService.html":{}}}],["returns",{"_index":79,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["right",{"_index":431,"title":{},"body":{"components/NotificationComponent.html":{}}}],["root",{"_index":144,"title":{},"body":{"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":99,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["route",{"_index":463,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["router",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["routermodule",{"_index":242,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":11,"title":{"routes.html":{}},"body":{"classes/APIRoutes.html":{},"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"overview.html":{},"routes.html":{}}}],["routes.ts",{"_index":7,"title":{},"body":{"classes/APIRoutes.html":{},"coverage.html":{}}}],["routes.ts:5",{"_index":19,"title":{},"body":{"classes/APIRoutes.html":{}}}],["routes.ts:6",{"_index":21,"title":{},"body":{"classes/APIRoutes.html":{}}}],["routes.ts:7",{"_index":23,"title":{},"body":{"classes/APIRoutes.html":{}}}],["routing.module",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":241,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":803,"title":{},"body":{"index.html":{}}}],["running",{"_index":633,"title":{},"body":{"injectables/NotificationService.html":{},"index.html":{}}}],["runs",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["rxjs",{"_index":592,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":596,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["same",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["save",{"_index":515,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["saving",{"_index":480,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["scaffolding",{"_index":813,"title":{},"body":{"index.html":{}}}],["see",{"_index":413,"title":{},"body":{"components/NotificationComponent.html":{}}}],["select",{"_index":482,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["selection",{"_index":543,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["selector",{"_index":59,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["send",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["serve",{"_index":804,"title":{},"body":{"index.html":{}}}],["server",{"_index":802,"title":{},"body":{"index.html":{}}}],["service",{"_index":75,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["services/alert.service",{"_index":83,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["services/auth",{"_index":244,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["services/notification.service",{"_index":281,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["services/user.service",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["set",{"_index":540,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["settimeout",{"_index":616,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shadow",{"_index":304,"title":{},"body":{"components/DashboardComponent.html":{}}}],["shouldstay",{"_index":539,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["show",{"_index":274,"title":{},"body":{"components/DashboardComponent.html":{}}}],["showing",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{}}}],["showmorenotification",{"_index":397,"title":{},"body":{"components/NotificationComponent.html":{}}}],["size",{"_index":440,"title":{},"body":{"components/NotificationComponent.html":{}}}],["slice(0",{"_index":424,"title":{},"body":{"components/NotificationComponent.html":{}}}],["small",{"_index":441,"title":{},"body":{"components/NotificationComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"index.html":{}}}],["src/.../category.ts",{"_index":791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notification.service.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/api",{"_index":6,"title":{},"body":{"classes/APIRoutes.html":{},"coverage.html":{}}}],["src/app/app",{"_index":240,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/helper.ts",{"_index":307,"title":{},"body":{"classes/Helper.html":{},"coverage.html":{}}}],["src/app/common/helper.ts:10",{"_index":314,"title":{},"body":{"classes/Helper.html":{}}}],["src/app/common/page",{"_index":636,"title":{},"body":{"components/PageTitleComponent.html":{},"coverage.html":{}}}],["src/app/components/alert/alert.component.ts",{"_index":55,"title":{},"body":{"components/AlertComponent.html":{},"coverage.html":{}}}],["src/app/components/alert/alert.component.ts:13",{"_index":70,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/components/alert/alert.component.ts:21",{"_index":78,"title":{},"body":{"components/AlertComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":266,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:20",{"_index":273,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:26",{"_index":280,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:31",{"_index":278,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:40",{"_index":277,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":322,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:22",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:38",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:82",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/notification",{"_index":451,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"coverage.html":{}}}],["src/app/components/notification/notification.component.ts",{"_index":394,"title":{},"body":{"components/NotificationComponent.html":{},"coverage.html":{}}}],["src/app/components/notification/notification.component.ts:20",{"_index":398,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:26",{"_index":415,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:31",{"_index":410,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:40",{"_index":400,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:51",{"_index":402,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/notification/notification.component.ts:61",{"_index":411,"title":{},"body":{"components/NotificationComponent.html":{}}}],["src/app/components/register/register.component.ts",{"_index":646,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:21",{"_index":651,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:30",{"_index":659,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:36",{"_index":654,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:51",{"_index":655,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:87",{"_index":653,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/models/alert.ts",{"_index":37,"title":{},"body":{"classes/Alert.html":{},"coverage.html":{}}}],["src/app/models/alert.ts:5",{"_index":47,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/models/alert.ts:6",{"_index":46,"title":{},"body":{"classes/Alert.html":{}}}],["src/app/models/category.ts",{"_index":792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/user.ts",{"_index":678,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:6",{"_index":683,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/usernotification.ts",{"_index":687,"title":{},"body":{"classes/UserNotification.html":{},"coverage.html":{}}}],["src/app/models/usernotification.ts:10",{"_index":697,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:11",{"_index":694,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:12",{"_index":695,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:13",{"_index":698,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:14",{"_index":699,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:15",{"_index":692,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/models/usernotification.ts:9",{"_index":693,"title":{},"body":{"classes/UserNotification.html":{}}}],["src/app/services/alert.service.ts",{"_index":120,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/app/services/alert.service.ts:15",{"_index":138,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:20",{"_index":126,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:34",{"_index":135,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:42",{"_index":129,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/alert.service.ts:49",{"_index":131,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/app/services/auth",{"_index":258,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/services/notification.service.ts",{"_index":564,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/notification.service.ts:100",{"_index":582,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:109",{"_index":587,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:24",{"_index":590,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:26",{"_index":570,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:32",{"_index":577,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:50",{"_index":573,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:68",{"_index":589,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/notification.service.ts:81",{"_index":575,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/services/user.service.ts",{"_index":707,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/user.service.ts:20",{"_index":709,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:22",{"_index":717,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:29",{"_index":711,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:33",{"_index":710,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:37",{"_index":713,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:49",{"_index":716,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:53",{"_index":714,"title":{},"body":{"injectables/UserService.html":{}}}],["src/environments/environment.prod.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["started",{"_index":794,"title":{"index.html":{}},"body":{}}],["statements",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":27,"title":{},"body":{"classes/APIRoutes.html":{}}}],["status",{"_index":623,"title":{},"body":{"injectables/NotificationService.html":{}}}],["stay",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["stored",{"_index":818,"title":{},"body":{"index.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/APIRoutes.html":{},"classes/Alert.html":{},"classes/Helper.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":52,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["styleurls",{"_index":61,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["submitted",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["subscribe(result",{"_index":492,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["success",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["successfully",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["support",{"_index":835,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":288,"title":{},"body":{"components/DashboardComponent.html":{}}}],["svg",{"_index":836,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":317,"title":{},"body":{"classes/Helper.html":{}}}],["t",{"_index":581,"title":{},"body":{"injectables/NotificationService.html":{}}}],["table",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["takes",{"_index":39,"title":{},"body":{"classes/Alert.html":{},"components/NotificationDetailComponent.html":{}}}],["tap",{"_index":595,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserService.html":{}}}],["tap(notifications",{"_index":610,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tap(result",{"_index":613,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tap(status",{"_index":622,"title":{},"body":{"injectables/NotificationService.html":{}}}],["tap(userprofile",{"_index":723,"title":{},"body":{"injectables/UserService.html":{}}}],["template",{"_index":51,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["templateurl",{"_index":63,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["test",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["tests",{"_index":825,"title":{},"body":{"index.html":{}}}],["there's",{"_index":293,"title":{},"body":{"components/DashboardComponent.html":{}}}],["there\\'s",{"_index":306,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.alerts",{"_index":147,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alerts.splice(this.alerts.indexof(alert",{"_index":150,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alerts.unshift(alert",{"_index":149,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.alertservice.reset",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["this.alertservice.unshift(alert",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{}}}],["this.body",{"_index":701,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.category",{"_index":702,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.categorylist",{"_index":487,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["this.categorylist[this.defaultcategory",{"_index":550,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.cookieservice.delete('notificationstestuser",{"_index":729,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.get('notificationstestuser",{"_index":719,"title":{},"body":{"injectables/UserService.html":{}}}],["this.cookieservice.set('notificationstestuser",{"_index":726,"title":{},"body":{"injectables/UserService.html":{}}}],["this.date",{"_index":705,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.defaultcategory",{"_index":547,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.formbuilder.group",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["this.get().subscribe",{"_index":624,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.getformvalidationerrors",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["this.getnotification",{"_index":488,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.header",{"_index":700,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.helper",{"_index":284,"title":{},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{}}}],["this.http.delete(`${apiroutes.notifications}/${notification._id",{"_index":627,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.get(usernotificationroute",{"_index":608,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(apiroutes.notifications",{"_index":612,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.http.post(apiroutes.user_login",{"_index":722,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(apiroutes.user_register",{"_index":728,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(apiroutes.notifications",{"_index":621,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.isclosed",{"_index":703,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.iscollapsed",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["this.location.back",{"_index":512,"title":{},"body":{"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{}}}],["this.logerror('error",{"_index":619,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.logerror(`${operation",{"_index":630,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.loginform",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.password.value).subscribe(result",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get(key).errors",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notification",{"_index":497,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.notification.body",{"_index":506,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.notification.category",{"_index":507,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.notification.header",{"_index":505,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.notificationform",{"_index":549,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.controls.body.value",{"_index":554,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.controls.category.setvalue(this.categorylist[this.defaultcategory",{"_index":559,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.controls.category.value",{"_index":556,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.controls.header.value",{"_index":553,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.get(key).errors",{"_index":562,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.invalid",{"_index":551,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationform.reset",{"_index":558,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notifications",{"_index":603,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notifications.unshift(result",{"_index":614,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationservice.add(notification).subscribe(result",{"_index":557,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["this.notificationservice.delete(notification).subscribe(result",{"_index":290,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.notificationservice.get",{"_index":285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.notificationservice.get().subscribe(_",{"_index":421,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationservice.get().subscribe(result",{"_index":418,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationservice.get(paramid",{"_index":491,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.notificationservice.notifications.filter(element",{"_index":422,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationservice.update(notification).subscribe(result",{"_index":420,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.notificationservice.update(this.notification).subscribe(result",{"_index":510,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.registerform",{"_index":661,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.password.value).subscribe(result",{"_index":668,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.controls.username.value",{"_index":667,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get(key).errors",{"_index":677,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.invalid",{"_index":663,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.reset",{"_index":148,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":490,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["this.router.navigate(['/dashboard",{"_index":660,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/login",{"_index":264,"title":{},"body":{"guards/AuthGuardService.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigate(['dashboard",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["this.router.navigate(['login",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showmorenotification",{"_index":425,"title":{},"body":{"components/NotificationComponent.html":{}}}],["this.update(result).subscribe(_",{"_index":618,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.user",{"_index":720,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userid",{"_index":704,"title":{},"body":{"classes/UserNotification.html":{}}}],["this.userservice.get()._id",{"_index":607,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.userservice.isauthenticated",{"_index":263,"title":{},"body":{"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.userservice.login(this.loginform.controls.username.value",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.register(this.registerform.controls.fullname.value",{"_index":666,"title":{},"body":{"components/RegisterComponent.html":{}}}],["title",{"_index":638,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title'},{'name",{"_index":113,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["title.component",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["title.component.css",{"_index":639,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title.component.html",{"_index":640,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title.component.ts",{"_index":637,"title":{},"body":{"components/PageTitleComponent.html":{},"coverage.html":{}}}],["title.component.ts:17",{"_index":641,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title.component.ts:21",{"_index":644,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["title/page",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"components/PageTitleComponent.html":{},"coverage.html":{}}}],["titles",{"_index":645,"title":{},"body":{"components/PageTitleComponent.html":{}}}],["tree",{"_index":54,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["true",{"_index":265,"title":{},"body":{"guards/AuthGuardService.html":{},"components/NotificationComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["turns",{"_index":298,"title":{},"body":{"components/DashboardComponent.html":{}}}],["type",{"_index":45,"title":{},"body":{"classes/Alert.html":{},"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/DashboardComponent.html":{},"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"classes/UserNotification.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":42,"title":{},"body":{"classes/Alert.html":{},"components/NotificationComponent.html":{}}}],["undefined",{"_index":605,"title":{},"body":{"injectables/NotificationService.html":{}}}],["under",{"_index":86,"title":{},"body":{"components/AlertComponent.html":{}}}],["unit",{"_index":824,"title":{},"body":{"index.html":{}}}],["unshift",{"_index":124,"title":{},"body":{"injectables/AlertService.html":{}}}],["unshift(alert",{"_index":134,"title":{},"body":{"injectables/AlertService.html":{}}}],["update",{"_index":509,"title":{},"body":{"components/NotificationDetailComponent.html":{},"injectables/NotificationService.html":{}}}],["update(notification",{"_index":588,"title":{},"body":{"injectables/NotificationService.html":{}}}],["updates",{"_index":467,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["updating",{"_index":625,"title":{},"body":{"injectables/NotificationService.html":{}}}],["url",{"_index":469,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["use",{"_index":814,"title":{},"body":{"index.html":{}}}],["used",{"_index":680,"title":{},"body":{"classes/User.html":{}}}],["user",{"_index":162,"title":{"classes/User.html":{}},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.service",{"_index":262,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/NotificationService.html":{}}}],["user_login",{"_index":14,"title":{},"body":{"classes/APIRoutes.html":{}}}],["user_register",{"_index":15,"title":{},"body":{"classes/APIRoutes.html":{}}}],["userid",{"_index":690,"title":{},"body":{"classes/UserNotification.html":{}}}],["username",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["usernotification",{"_index":276,"title":{"classes/UserNotification.html":{}},"body":{"components/DashboardComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"classes/UserNotification.html":{},"coverage.html":{}}}],["usernotification(this.userservice.get()._id",{"_index":552,"title":{},"body":{"components/NotificationGeneratorComponent.html":{}}}],["usernotificationroute",{"_index":604,"title":{},"body":{"injectables/NotificationService.html":{}}}],["userprofile",{"_index":724,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":657,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userservice",{"_index":157,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/LoginComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice.get().fullname",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["uses",{"_index":74,"title":{},"body":{"components/AlertComponent.html":{}}}],["validate",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["validation",{"_index":503,"title":{},"body":{"components/NotificationDetailComponent.html":{}}}],["validationerrors",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/RegisterComponent.html":{}}}],["value",{"_index":538,"title":{},"body":{"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":95,"title":{},"body":{"components/AlertComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["variable",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":844,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":799,"title":{},"body":{"index.html":{}}}],["via",{"_index":827,"title":{},"body":{"index.html":{}}}],["void",{"_index":80,"title":{},"body":{"components/AlertComponent.html":{},"injectables/AlertService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"injectables/NotificationService.html":{},"components/PageTitleComponent.html":{},"components/RegisterComponent.html":{}}}],["want",{"_index":289,"title":{},"body":{"components/DashboardComponent.html":{}}}],["warning",{"_index":319,"title":{},"body":{"classes/Helper.html":{},"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/NotificationDetailComponent.html":{},"components/NotificationGeneratorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["welcome",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["white",{"_index":450,"title":{},"body":{"components/NotificationComponent.html":{}}}],["width",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/NotificationComponent.html":{},"components/RegisterComponent.html":{}}}],["within",{"_index":681,"title":{},"body":{"classes/User.html":{}}}],["yes",{"_index":579,"title":{},"body":{"injectables/NotificationService.html":{}}}],["zone.js",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/APIRoutes.html":{"url":"classes/APIRoutes.html","title":"class - APIRoutes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIRoutes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/api-routes.ts\n        \n\n            \n                Description\n            \n            \n                This class contains API routes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    USER_LOGIN\n                                \n                                \n                                    USER_REGISTER\n                                \n                                \n                                    NOTIFICATIONS\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        USER_LOGIN\n                    \n                \n\n                \n                    \n                        getUSER_LOGIN()\n                    \n                \n                            \n                                \n                                    Defined in src/app/api-routes.ts:5\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        USER_REGISTER\n                    \n                \n\n                \n                    \n                        getUSER_REGISTER()\n                    \n                \n                            \n                                \n                                    Defined in src/app/api-routes.ts:6\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        NOTIFICATIONS\n                    \n                \n\n                \n                    \n                        getNOTIFICATIONS()\n                    \n                \n                            \n                                \n                                    Defined in src/app/api-routes.ts:7\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class APIRoutes {\n  public static get USER_LOGIN(): string { return '/api/login'; }\n  public static get USER_REGISTER(): string { return '/api/register'; }\n  public static get NOTIFICATIONS(): string { return '/api/notification'; }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Alert.html":{"url":"classes/Alert.html","title":"class - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/Alert.ts\n        \n\n            \n                Description\n            \n            \n                This model takes in information to create alert UI\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Alert.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/Alert.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Alert {\n  type: string;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertComponent.html":{"url":"components/AlertComponent.html","title":"component - AlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/alert/alert.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alert\n            \n\n            \n                styleUrls\n                ./alert.component.css\n            \n\n\n\n            \n                templateUrl\n                ./alert.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/alert/alert.component.ts:13\n                            \n                        \n\n                \n                    \n                            constructor for alert\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                uses alert service to control behavior\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/alert/alert.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {AlertService} from '../../services/alert.service';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\n\n/**\n * this component creates alerts under the navbar\n */\nexport class AlertComponent implements OnInit {\n\n  /**\n   * constructor for alert\n   * @param alertService uses alert service to control behavior\n   */\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n\n  {{alert.message}}\n\n\n    \n\n    \n                \n                    ./alert.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{alert.message}}'\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/alert.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                alerts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                reset\n                            \n                            \n                                unshift\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    alertsList\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/alert.service.ts:20\n                            \n                        \n\n                \n                    \n                            constructor.\nInitialize alerts.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:42\n                \n            \n\n\n            \n                \n                    close an open alert\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to close\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:49\n                \n            \n\n\n            \n                \n                    empty alerts array\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unshift\n                        \n                        \n                    \n                \n            \n            \n                \nunshift(alert: Alert)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/alert.service.ts:34\n                \n            \n\n\n            \n                \n                    add alerts to array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Alert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            alerts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Alert[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/alert.service.ts:15\n                            \n                        \n\n                \n                    \n                        array for keeping alerts\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        alertsList\n                    \n                \n\n                \n                    \n                        getalertsList()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/alert.service.ts:20\n                                \n                            \n                    \n                        \n                                getter for alerts\n\n\n                                \n                                    Returns :         Alert[]\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Alert } from '../models/Alert';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * this service controls alert boxes\n */\nexport class AlertService {\n\n  /**\n   * array for keeping alerts\n   */\n  private alerts: Alert[];\n\n  /**\n   * getter for alerts\n   */\n  public get alertsList(): Alert[] { return this.alerts; }\n\n  /**\n   * constructor.\n   * Initialize alerts.\n   */\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * add alerts to array\n   * @param alert to display\n   */\n  unshift(alert: Alert) {\n    this.alerts.unshift(alert);\n  }\n\n  /**\n   * close an open alert\n   * @param alert to close\n   */\n  close(alert: Alert) {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  /**\n   * empty alerts array\n   */\n  reset() {\n    this.alerts = [];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCollapsed\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            constructor for app component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling user logout\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling navigation\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for creating alerts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:35\n                \n            \n\n\n            \n                \n                    this method is for logging out current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                        collapse control for navbar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        for handling navigation\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                        for handling user logout\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {UserService} from './services/user.service';\nimport {Router} from '@angular/router';\nimport {AlertService} from './services/alert.service';\nimport {Alert} from './models/Alert';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n/**\n * main component to start app\n */\nexport class AppComponent {\n\n  /**\n   * collapse control for navbar\n   */\n  isCollapsed: boolean;\n\n  /**\n   * constructor for app component\n   * @param userService for handling user logout\n   * @param router for handling navigation\n   * @param alertService for creating alerts\n   */\n  constructor(public userService: UserService, public router: Router, private alertService: AlertService) {\n    this.isCollapsed = false;\n  }\n\n  /**\n   * this method is for logging out current user\n   */\n  logout() {\n    if (this.userService.Logout()) {\n      const alert = new Alert();\n      alert.type = 'success';\n      alert.message = `You have been logged out successfully!`;\n\n      this.alertService.reset();\n      this.alertService.unshift(alert);\n      this.router.navigate(['login']);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  Notifications Test\n\n  \n    \n  \n\n  \n    \n      \n        Notifications\n      \n      \n        Create New\n      \n    \n\n    \n      \n        Welcome {{userService.Get().FullName}}!\n      \n      \n        Logout\n      \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Notifications Test                            Notifications                    Create New                            Welcome {{userService.Get().FullName}}!                    Logout            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nNotificationDetailComponent\n\nNotificationDetailComponent\n\nAppModule -->\n\nNotificationDetailComponent->AppModule\n\n\n\n\n\nNotificationGeneratorComponent\n\nNotificationGeneratorComponent\n\nAppModule -->\n\nNotificationGeneratorComponent->AppModule\n\n\n\n\n\nPageTitleComponent\n\nPageTitleComponent\n\nAppModule -->\n\nPageTitleComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AlertComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NotificationComponent\n                        \n                        \n                            NotificationDetailComponent\n                        \n                        \n                            NotificationGeneratorComponent\n                        \n                        \n                            PageTitleComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport { AlertComponent } from './components/alert/alert.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { NotificationGeneratorComponent } from './components/notification-generator/notification-generator.component';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { NotificationDetailComponent } from './components/notification-detail/notification-detail.component';\n\n// bootstrap\nimport {NgbModule, NgbAccordionModule} from '@ng-bootstrap/ng-bootstrap';\nimport { PageTitleComponent } from './common/page-title/page-title.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    AlertComponent,\n    RegisterComponent,\n    NotificationGeneratorComponent,\n    NotificationComponent,\n    NotificationDetailComponent,\n    PageTitleComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgbModule,\n    NgbAccordionModule\n  ],\n  providers: [\n    CookieService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {AuthGuardService} from './services/auth-guard.service';\nimport {RegisterComponent} from './components/register/register.component';\nimport {NotificationGeneratorComponent} from './components/notification-generator/notification-generator.component';\nimport {NotificationDetailComponent} from './components/notification-detail/notification-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuardService] },\n  { path: 'notification/new', component: NotificationGeneratorComponent, canActivate: [AuthGuardService] },\n  { path: 'notification/:id', component: NotificationDetailComponent, canActivate: [AuthGuardService] }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-guard.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {Router} from '@angular/router';\nimport {UserService} from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public userService: UserService, public router: Router) { }\n\n  canActivate(): boolean {\n    if (!this.userService.IsAuthenticated()) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helper\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:20\n                            \n                        \n\n                \n                    \n                            constructor for dashboard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this to show notifications on dashboard\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(notification: UserNotification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:40\n                \n            \n\n\n            \n                \n                    delete notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                UserNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:31\n                \n            \n\n\n            \n                \n                    initiates helper and notifications\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Helper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:20\n                            \n                        \n\n                \n                    \n                        helper class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/dashboard/dashboard.component.ts:26\n                            \n                        \n\n                \n                    \n                        this to show notifications on dashboard\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\nimport {UserNotification} from '../../models/UserNotification';\nimport {Helper} from '../../common/helper';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\n/**\n * This component creates the dashboard\n */\nexport class DashboardComponent implements OnInit {\n\n  /**\n   * helper class\n   */\n  helper: Helper;\n\n  /**\n   * constructor for dashboard\n   * @param notificationService this to show notifications on dashboard\n   */\n  constructor(public notificationService: NotificationService) { }\n\n  /**\n   * initiates helper and notifications\n   */\n  ngOnInit() {\n    this.helper = new Helper();\n    this.notificationService.get();\n  }\n\n  /**\n   * delete notification\n   * @param notification\n   */\n  delete(notification: UserNotification) {\n    const conf = confirm('Are you sure you want to delete this notification?');\n    if (!conf) {\n      return;\n    }\n    this.notificationService.delete(notification).subscribe(result => {\n      console.log(result);\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n\n      \n      Looks like there's no notification here! Why not Create New?\n\n      \n      \n\n        \n        \n          \n            \n\n              \n              {{notification.Header}}\n\n              \n              \n                Open\n                Edit\n                Delete\n              \n\n            \n          \n\n          \n          \n            {{notification.Body}}\n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                /* this turns the focus design off */\n.notif-heading:focus {\n  box-shadow: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Looks like there\\'s no notification here! Why not Create New?                                                                              {{notification.Header}}                                            Open                Edit                Delete                                                                    {{notification.Body}}                              '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Helper.html":{"url":"classes/Helper.html","title":"class - Helper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Helper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/helper.ts\n        \n\n            \n                Description\n            \n            \n                This class is for any helper functions that might be needed during execution\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDisplayType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDisplayType\n                        \n                        \n                    \n                \n            \n            \n                \ngetDisplayType(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/helper.ts:10\n                \n            \n\n\n            \n                \n                    get type of display for elements\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of category\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Helper {\n\n  /**\n   * get type of display for elements\n   * @param category name of category\n   */\n  getDisplayType(category: string): string {\n    switch (category) {\n      case 'INFO':\n        return 'info';\n      case 'WARNING':\n        return 'warning';\n      case 'ERROR':\n        return 'danger';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormValidationErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                            constructor for login\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to create and handle login form\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling routes after login\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for authenticating user\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for generating messages related to login\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormValidationErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n                    check previous authentication.\nInitialize formgroup.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:52\n                \n            \n\n\n            \n                \n                    this function runs when login form is submitted\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:22\n                            \n                        \n\n                \n                    \n                        controls the login form\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        for handling routes after login\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {UserService} from '../../services/user.service';\nimport {Router} from '@angular/router';\nimport {Alert} from '../../models/Alert';\nimport {AlertService} from '../../services/alert.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\n/**\n * This component is for login\n */\nexport class LoginComponent implements OnInit {\n\n  /**\n   * controls the login form\n   */\n  loginForm: FormGroup;\n\n  /**\n   * constructor for login\n   * @param formBuilder to create and handle login form\n   * @param router for handling routes after login\n   * @param userService for authenticating user\n   * @param alertService for generating messages related to login\n   */\n  constructor(private formBuilder: FormBuilder, public router: Router, private userService: UserService,\n              private alertService: AlertService) { }\n\n  /**\n   * check previous authentication.\n   * Initialize formgroup.\n   */\n  ngOnInit() {\n    if (this.userService.IsAuthenticated()) {\n      this.router.navigate(['dashboard']);\n    }\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required ],\n      password: ['', [Validators.required, Validators.minLength(6)] ]\n    });\n  }\n\n  /**\n   * this function runs when login form is submitted\n   */\n  onLogin() {\n    // validate login form\n    if (this.loginForm.invalid) {\n      this.getFormValidationErrors();\n      return;\n    }\n\n    // send request for login\n    this.userService.Login(this.loginForm.controls.username.value, this.loginForm.controls.password.value).subscribe(result => {\n      if (result !== null) {\n        // create alert for success and move to the dashboard\n        const alert = new Alert();\n        alert.type = 'success';\n        alert.message = `Welcome ${result.FullName}!`;\n\n        this.alertService.reset();\n        this.alertService.unshift(alert);\n        this.router.navigate(['dashboard']);\n      } else {\n        // error in authentication; generate alert and stay on same page.\n        const alert = new Alert();\n        alert.type = 'danger';\n        alert.message = 'Incorrect login details. Please correct and try again.';\n\n        this.alertService.reset();\n        this.alertService.unshift(alert);\n      }\n    });\n  }\n\n  getFormValidationErrors() {\n    Object.keys(this.loginForm.controls).forEach(key => {\n      const controlErrors: ValidationErrors = this.loginForm.get(key).errors;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          const alert = new Alert();\n          alert.type = 'warning';\n          alert.message = `${key} is ${keyError}`;\n\n          this.alertService.reset();\n          this.alertService.unshift(alert);\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n  \n    \n      Username\n      \n    \n    \n      Password\n      \n    \n    Login\n    Register\n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                /* div for showing login elements */\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n}\n\n/* form containing login elements */\n.login-container form {\n  max-width: 20rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Username                    Password              Login    Register  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationComponent.html":{"url":"components/NotificationComponent.html","title":"component - NotificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification/notification.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification\n            \n\n            \n                styleUrls\n                ./notification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helper\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                getNotifications\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showMoreNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification/notification.component.ts:20\n                            \n                        \n\n                \n                    \n                            constructor for notifications\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling notifications\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            close\n                        \n                        \n                    \n                \n            \n            \n                \nclose(notification: UserNotification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:40\n                \n            \n\n\n            \n                \n                    this method runs when a notification is closed on UI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                UserNotification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotifications\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:51\n                \n            \n\n\n            \n                \n                    this method fetches all notifications that are not closed on UI.\nIt fulfills the requirement of fetching only 4 or 5 notifications when there are more in array\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:31\n                \n            \n\n\n            \n                \n                    initialize helper and get notifications\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showMoreNotification\n                        \n                        \n                    \n                \n            \n            \n                \nshowMoreNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification/notification.component.ts:61\n                \n            \n\n\n            \n                \n                    this method checks to see if the count of notifications is more than 5.\nIt then creates a 'more notifications' UI alert\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helper\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Helper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification/notification.component.ts:20\n                            \n                        \n\n                \n                    \n                        Helper class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification/notification.component.ts:26\n                            \n                        \n\n                \n                    \n                        for handling notifications\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from '../../services/notification.service';\nimport {Helper} from '../../common/helper';\nimport {UserNotification} from '../../models/UserNotification';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\n\n/**\n * this handles all quick notifications\n */\nexport class NotificationComponent implements OnInit {\n\n  /**\n   * Helper class\n   */\n  helper: Helper;\n\n  /**\n   * constructor for notifications\n   * @param notificationService for handling notifications\n   */\n  constructor(public notificationService: NotificationService) { }\n\n  /**\n   * initialize helper and get notifications\n   */\n  ngOnInit() {\n    this.helper = new Helper();\n    this.notificationService.get().subscribe(result => {});\n  }\n\n  /**\n   * this method runs when a notification is closed on UI\n   * @param notification\n   */\n  close(notification: UserNotification) {\n    notification.IsClosed = true;\n    this.notificationService.update(notification).subscribe(result => {\n      this.notificationService.get().subscribe(_ => {});\n    });\n  }\n\n  /**\n   * this method fetches all notifications that are not closed on UI.\n   * It fulfills the requirement of fetching only 4 or 5 notifications when there are more in array\n   */\n  getNotifications() {\n    return this.notificationService.notifications.filter(element => {\n      return !element.IsClosed;\n    }).slice(0, this.showMoreNotification() ? 4 : 5);\n  }\n\n  /**\n   * this method checks to see if the count of notifications is more than 5.\n   * It then creates a 'more notifications' UI alert\n   */\n  showMoreNotification() {\n    return this.notificationService.notifications.filter(element => {\n      return !element.IsClosed;\n    }).length > 5;\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n      \n        {{notification.Header}}\n        {{ notification.Body }}\n      \n    \n  \n  \n  \n    You have more notifications\n  \n\n\n    \n\n    \n                \n                    ./notification.component.css\n                \n                /* this controls the container in which all notifications are kept */\n.notification-container {\n  position: fixed;\n  width: 20%;\n  right: 1rem;\n  bottom: 1rem;\n}\n\n/* alerts generated as notifications */\n.notification-container .alert {\n  padding: 0.3rem 1rem;\n  opacity: 0.8;\n  font-size: small;\n  margin-bottom: 0.2rem;\n}\n.notification-container .alert:hover {\n  padding: 0.3rem 1rem;\n  opacity: 1.0;\n}\n\n/* redefining colors for notifications */\n.notification-container .alert-info {\n  background: var(--info);\n  color: var(--white);\n}\n.notification-container .alert-warning {\n  background: var(--warning);\n  color: var(--white);\n}\n.notification-container .alert-danger {\n  background: var(--danger);\n  color: var(--white);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{notification.Header}}        {{ notification.Body }}                    You have more notifications  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationDetailComponent.html":{"url":"components/NotificationDetailComponent.html","title":"component - NotificationDetailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationDetailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification-detail/notification-detail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification-detail\n            \n\n            \n                styleUrls\n                ./notification-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification-detail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryList\n                            \n                            \n                                    Public\n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                            \n                                getNotification\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notification\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, notificationService: NotificationService, route: ActivatedRoute, alertService: AlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification-detail/notification-detail.component.ts:30\n                            \n                        \n\n                \n                    \n                            constructor for notification details\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for controlling navigation\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling notification updates\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for getting parameters from URL\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for creating alerts\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for navigating\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notification\n                    \n                \n                \n                    \n                        Type :         UserNotification\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/notification-detail/notification-detail.component.ts:25\n                            \n                        \n                \n                    \n                        This takes in a notification to edit\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-detail/notification-detail.component.ts:76\n                \n            \n\n\n            \n                \n                    This fetches categories from enum Category\n\n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotification\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotification()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-detail/notification-detail.component.ts:57\n                \n            \n\n\n            \n                \n                    method for getting notification\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-detail/notification-detail.component.ts:48\n                \n            \n\n\n            \n                \n                    reset alerts. initialize categories. fetch notification for editing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-detail/notification-detail.component.ts:84\n                \n            \n\n\n            \n                \n                    This method runs on saving current notification\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification-detail/notification-detail.component.ts:30\n                            \n                        \n\n                \n                    \n                        list of categories for select\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            location\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification-detail/notification-detail.component.ts:40\n                            \n                        \n\n                \n                    \n                        for controlling navigation\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {NotificationService} from '../../services/notification.service';\nimport {UserService} from '../../services/user.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Category} from '../../models/Category';\nimport {UserNotification} from '../../models/UserNotification';\nimport {AlertService} from '../../services/alert.service';\nimport {Alert} from '../../models/Alert';\n\n@Component({\n  selector: 'app-notification-detail',\n  templateUrl: './notification-detail.component.html',\n  styleUrls: ['./notification-detail.component.css']\n})\n\n/**\n * this component creates page for editing notification\n */\nexport class NotificationDetailComponent implements OnInit {\n\n  /**\n   * This takes in a notification to edit\n   */\n  @Input() notification: UserNotification;\n\n  /**\n   * list of categories for select\n   */\n  categoryList: any;\n\n  /**\n   * constructor for notification details\n   * @param location for controlling navigation\n   * @param notificationService for handling notification updates\n   * @param route for getting parameters from URL\n   * @param alertService for creating alerts\n   * @param router for navigating\n   */\n  constructor(public location: Location,\n              private notificationService: NotificationService,\n              private route: ActivatedRoute, private alertService: AlertService,\n              private router: Router) { }\n\n  /**\n   * reset alerts. initialize categories. fetch notification for editing\n   */\n  ngOnInit() {\n    this.alertService.reset();\n    this.categoryList = Category;\n    this.getNotification();\n  }\n\n  /**\n   * method for getting notification\n   */\n  getNotification(): void {\n    const paramId = this.route.snapshot.paramMap.get('id');\n    this.notificationService.get(paramId)\n      .subscribe(result => {\n        if (result.length === 0) {\n          const alert = new Alert();\n          alert.type = 'danger';\n          alert.message = 'There is no notification for the ID provided';\n          this.alertService.unshift(alert);\n          this.router.navigate(['dashboard']);\n        } else {\n          this.notification  = result[0];\n        }\n      });\n  }\n\n  /**\n   * This fetches categories from enum Category\n   */\n  getCategories(): Array {\n    const keys = Object.keys(this.categoryList);\n    return keys.slice(keys.length / 2);\n  }\n\n  /**\n   * This method runs on saving current notification\n   */\n  onSubmit() {\n    // validation of fields\n    if (this.notification.Header === '' || this.notification.Body === '' || this.notification.Category === null) {\n      const alert = new Alert();\n      alert.type = 'warning';\n      alert.message = 'Fields cannot be left empty';\n      this.alertService.unshift(alert);\n      return;\n    }\n\n    // update notification\n    this.notificationService.update(this.notification).subscribe(result => {\n\n      // create success alert\n      const alert = new Alert();\n      alert.type = 'success';\n      alert.message = 'Notification Changed';\n      this.alertService.unshift(alert);\n\n      // return to dashboard\n      this.location.back();\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    Header\n    \n      \n      \n    \n  \n\n  \n    Body\n    \n      \n      \n    \n  \n\n  \n    Category\n    \n      \n      \n        \n          {{category}}\n        \n      \n    \n  \n\n  \n    \n    \n      \n      Save Changes\n      Go Back\n    \n  \n\n\n\n    \n\n    \n                \n                    ./notification-detail.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Header                            Body                            Category                                  {{category}}                                          Save Changes      Go Back      '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationDetailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationGeneratorComponent.html":{"url":"components/NotificationGeneratorComponent.html","title":"component - NotificationGeneratorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationGeneratorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/notification-generator/notification-generator.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notification-generator\n            \n\n            \n                styleUrls\n                ./notification-generator.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification-generator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryList\n                            \n                            \n                                defaultCategory\n                            \n                            \n                                notificationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCategories\n                            \n                            \n                                getFormValidationErrors\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, location: Location, notificationService: NotificationService, userService: UserService, route: ActivatedRoute, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/notification-generator/notification-generator.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for creating notification form\n\n                                                        \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling navigation\n\n                                                        \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling notifications\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for attaching current user with requests\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling navigation\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for creating alerts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-generator/notification-generator.component.ts:68\n                \n            \n\n\n            \n                \n                    get categories for select box\n\n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormValidationErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-generator/notification-generator.component.ts:114\n                \n            \n\n\n            \n                \n                    validate form errors\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-generator/notification-generator.component.ts:76\n                \n            \n\n\n            \n                \n                    return to previous navigated page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-generator/notification-generator.component.ts:54\n                \n            \n\n\n            \n                \n                    Initialize alerts. initialize category list. initialize default category. initialize form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(shouldStay: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/notification-generator/notification-generator.component.ts:84\n                \n            \n\n\n            \n                \n                    this method runs when form is submitted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    shouldStay\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                    \n                                        set to true to stay on the same page after notification creation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification-generator/notification-generator.component.ts:36\n                            \n                        \n\n                \n                    \n                        list of categories from Category enum\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification-generator/notification-generator.component.ts:31\n                            \n                        \n\n                \n                    \n                        selection of default category\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/notification-generator/notification-generator.component.ts:26\n                            \n                        \n\n                \n                    \n                        form group for notification\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Category} from '../../models/Category';\nimport {Location} from '@angular/common';\nimport {UserNotification} from '../../models/UserNotification';\nimport {NotificationService} from '../../services/notification.service';\nimport {UserService} from '../../services/user.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {AlertService} from '../../services/alert.service';\nimport {Alert} from '../../models/Alert';\n\n@Component({\n  selector: 'app-notification-generator',\n  templateUrl: './notification-generator.component.html',\n  styleUrls: ['./notification-generator.component.css']\n})\n\n/**\n * this component generates new notifications\n */\nexport class NotificationGeneratorComponent implements OnInit {\n\n  /**\n   * form group for notification\n   */\n  notificationForm: FormGroup;\n\n  /**\n   * selection of default category\n   */\n  defaultCategory: Category;\n\n  /**\n   * list of categories from Category enum\n   */\n  categoryList: any;\n\n  /**\n   * Constructor\n   * @param formBuilder for creating notification form\n   * @param location for handling navigation\n   * @param notificationService for handling notifications\n   * @param userService for attaching current user with requests\n   * @param route for handling navigation\n   * @param alertService for creating alerts\n   */\n  constructor(private formBuilder: FormBuilder, private location: Location,\n              private notificationService: NotificationService, private userService: UserService,\n              private route: ActivatedRoute, private alertService: AlertService) { }\n\n  /**\n   * Initialize alerts. initialize category list. initialize default category. initialize form.\n   */\n  ngOnInit() {\n    this.alertService.reset();\n    this.categoryList = Category;\n    this.defaultCategory = Category.INFO;\n    this.notificationForm = this.formBuilder.group({\n      header: [ '', Validators.required ],\n      body: [ '', Validators.required ],\n      category: [ this.categoryList[this.defaultCategory], Validators.required ]\n    });\n  }\n\n  /**\n   * get categories for select box\n   */\n  getCategories(): Array {\n    const keys = Object.keys(this.categoryList);\n    return keys.slice(keys.length / 2);\n  }\n\n  /**\n   * return to previous navigated page\n   */\n  goBack(): void {\n    this.location.back();\n  }\n\n  /**\n   * this method runs when form is submitted\n   * @param shouldStay set to true to stay on the same page after notification creation\n   */\n  onSubmit(shouldStay: boolean = false) {\n    if (this.notificationForm.invalid) {\n      this.getFormValidationErrors();\n      return;\n    }\n\n    const notification = new UserNotification(this.userService.Get()._id);\n    notification.Header = this.notificationForm.controls.header.value;\n    notification.Body = this.notificationForm.controls.body.value;\n    notification.Category = this.notificationForm.controls.category.value;\n\n    this.notificationService.add(notification).subscribe(result => {\n      this.notificationForm.reset();\n      this.notificationForm.controls.category.setValue(this.categoryList[this.defaultCategory]);\n\n      const alert = new Alert();\n      alert.type = 'success';\n      alert.message = 'Notification Added';\n      this.alertService.reset();\n      this.alertService.unshift(alert);\n\n      if (!shouldStay) {\n        this.location.back();\n      }\n    });\n  }\n\n  /**\n   * validate form errors\n   */\n  getFormValidationErrors() {\n    Object.keys(this.notificationForm.controls).forEach(key => {\n      const controlErrors: ValidationErrors = this.notificationForm.get(key).errors;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          const alert = new Alert();\n          alert.type = 'warning';\n          alert.message = `${key} is ${keyError}`;\n\n          this.alertService.reset();\n          this.alertService.unshift(alert);\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n      Header\n      \n        \n        \n      \n    \n\n    \n      Body\n      \n        \n        \n      \n    \n\n    \n      Category\n      \n        \n        \n          \n            {{category}}\n          \n        \n      \n    \n\n    \n      \n      \n      \n        Notify\n        Notify & go back\n        Go Back\n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./notification-generator.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Header                                          Body                                          Category                                            {{category}}                                                          Notify        Notify & go back        Go Back            '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationGeneratorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/notification.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                logError\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notificationsList\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserService, alertService: AlertService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/notification.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(notification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(notification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(notificationId?)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notificationId\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(operation: string, result?: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:100\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Handle Http operation that failed.\nLet the app continue.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    operation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'operation'\n                                    \n\n                                    \n                                        \nname of the operation that failed\n\n\n                                    \n                                \n                                \n                                    result\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                    \n                                        \noptional value to return as the observable result\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     (error: any) => any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(notification)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/notification.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserNotification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/notification.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notificationsList\n                    \n                \n\n                \n                    \n                        getnotificationsList()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/notification.service.ts:26\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {APIRoutes} from '../api-routes';\nimport {UserNotification} from '../models/UserNotification';\nimport {catchError, tap} from 'rxjs/operators';\nimport {UserService} from './user.service';\nimport {AlertService} from './alert.service';\nimport {Alert} from '../models/Alert';\nimport {Category} from '../models/Category';\nimport {Router} from '@angular/router';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\nconst INFO_TIMEOUT = 90000;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  public notifications: UserNotification[] = [];\n\n  public get notificationsList(): UserNotification[] { return this.notifications; }\n\n  constructor(private http: HttpClient, private userService: UserService, private alertService: AlertService,\n              private router: Router) {\n  }\n\n  get(notificationId?): Observable {\n    let userNotificationRoute;\n    if (notificationId === undefined) {\n      userNotificationRoute = APIRoutes.NOTIFICATIONS + '/' + this.userService.Get()._id;\n    } else {\n      userNotificationRoute = APIRoutes.NOTIFICATIONS + '/' + this.userService.Get()._id + '/' + notificationId;\n    }\n\n    return this.http.get(userNotificationRoute, httpOptions).pipe(\n      tap(notifications => {\n        if (notificationId === undefined) {\n          this.notifications = notifications;\n        }\n      }),\n      catchError(this.handleError('get notifications'))\n    );\n  }\n\n  add(notification): Observable {\n    return this.http.post(APIRoutes.NOTIFICATIONS, notification, httpOptions).pipe(\n      (tap(result => {\n        if (result !== null) {\n          this.notifications.unshift(result);\n          if (result.Category === Category.INFO) {\n            setTimeout(() => {\n              result.IsClosed = true;\n              this.update(result).subscribe(_ => {});\n            }, INFO_TIMEOUT);\n          }\n        } else {\n          this.logError('Error in adding notification');\n        }\n      }))\n    );\n  }\n\n  update(notification): Observable {\n    return this.http.put(APIRoutes.NOTIFICATIONS, notification, httpOptions).pipe(\n      (tap(status => {\n        if (status) {\n          this.get().subscribe();\n        } else {\n          this.logError('Error in updating notification');\n        }\n      })),\n      catchError(this.handleError('update notification'))\n    );\n  }\n\n  delete(notification): Observable {\n    return this.http.delete(`${APIRoutes.NOTIFICATIONS}/${notification._id}`, httpOptions).pipe(\n      (tap(status => {\n        if (status) {\n          this.get().subscribe();\n        } else {\n          this.logError('Error in deleting notification');\n        }\n      })),\n      catchError(this.handleError('delete notification'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError(operation = 'operation', result?: T) {\n    return (error: any): Observable => {\n      this.logError(`${operation} failed: ${error.message}`);\n      // Let the app keep running by returning an empty result.\n      this.router.navigate(['dashboard']);\n      return of(result as T);\n    };\n  }\n\n  private logError(message: string) {\n    const alert: Alert = new Alert();\n    alert.message = `Error: ${message}`;\n    alert.type = 'danger';\n    this.alertService.unshift(alert);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageTitleComponent.html":{"url":"components/PageTitleComponent.html","title":"component - PageTitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageTitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/common/page-title/page-title.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-title\n            \n\n            \n                styleUrls\n                ./page-title.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/common/page-title/page-title.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/common/page-title/page-title.component.ts:17\n                            \n                        \n                \n                    \n                        title to be displayed as heading\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/common/page-title/page-title.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-page-title',\n  templateUrl: './page-title.component.html',\n  styleUrls: ['./page-title.component.css']\n})\n\n/**\n * This component is for creating titles on every page\n */\nexport class PageTitleComponent implements OnInit {\n\n  /**\n   * title to be displayed as heading\n   */\n  @Input() title: string;\n\n  constructor() { }\n\n  ngOnInit() {}\n\n}\n\n    \n\n    \n        \n\n  \n    \n      {{title}}\n    \n  \n\n\n    \n\n    \n                \n                    ./page-title.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{title}}      '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageTitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFormValidationErrors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userService: UserService, router: Router, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                            constructor for register component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for creating register form\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for registering user\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for handling navigation\n\n                                                        \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                        AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for generating alerts\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFormValidationErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetFormValidationErrors()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:87\n                \n            \n\n\n            \n                \n                    validate register form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:36\n                \n            \n\n\n            \n                \n                    check authentication. initialize register form.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRegister\n                        \n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/register/register.component.ts:51\n                \n            \n\n\n            \n                \n                    this method registers users\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:21\n                            \n                        \n\n                \n                    \n                        formgroup for registration\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/register/register.component.ts:30\n                            \n                        \n\n                \n                    \n                        for handling navigation\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../../services/user.service';\nimport {FormBuilder, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AlertService} from '../../services/alert.service';\nimport {Alert} from '../../models/Alert';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n/**\n * this component registers users\n */\nexport class RegisterComponent implements OnInit {\n\n  /**\n   * formgroup for registration\n   */\n  registerForm: FormGroup;\n\n  /**\n   * constructor for register component\n   * @param formBuilder for creating register form\n   * @param userService for registering user\n   * @param router for handling navigation\n   * @param alertService for generating alerts\n   */\n  constructor(private formBuilder: FormBuilder, private userService: UserService, public router: Router,\n              private alertService: AlertService) { }\n\n  /**\n   * check authentication. initialize register form.\n   */\n  ngOnInit() {\n    if (this.userService.IsAuthenticated()) {\n      this.router.navigate(['/dashboard']);\n    }\n\n    this.registerForm = this.formBuilder.group({\n      fullName: ['', Validators.required ],\n      username: ['', Validators.required ],\n      password: ['', [Validators.required, Validators.minLength(6)] ]\n    });\n  }\n\n  /**\n   * this method registers users\n   */\n  onRegister() {\n    // validate form\n    if (this.registerForm.invalid) {\n      this.getFormValidationErrors();\n      return;\n    }\n\n    // make http call to register user\n    this.userService.Register(this.registerForm.controls.fullName.value,\n      this.registerForm.controls.username.value,\n      this.registerForm.controls.password.value).subscribe(result => {\n\n        if (result.ok) {\n          // move to login page if success\n          const alert = new Alert();\n          alert.type = 'success';\n          alert.message = 'You have been registered. Please login to continue';\n          this.alertService.reset();\n          this.alertService.unshift(alert);\n\n          this.router.navigate(['/login']);\n\n        } else {\n          // give failure alert and stay on same page\n          const alert = new Alert();\n          alert.type = 'danger';\n          alert.message = `Username \"${this.registerForm.controls.username.value}\" already exists. Please try with another username.`;\n          this.alertService.reset();\n          this.alertService.unshift(alert);\n        }\n    });\n  }\n\n  /**\n   * validate register form\n   */\n  getFormValidationErrors() {\n    Object.keys(this.registerForm.controls).forEach(key => {\n      const controlErrors: ValidationErrors = this.registerForm.get(key).errors;\n      if (controlErrors != null) {\n        Object.keys(controlErrors).forEach(keyError => {\n          const alert = new Alert();\n          alert.type = 'danger';\n          alert.message = `${key} is ${keyError}`;\n\n          this.alertService.reset();\n          this.alertService.unshift(alert);\n        });\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n  \n    Full Name\n    \n  \n\n  \n    Username\n    \n  \n\n  \n    Password\n    \n  \n\n    Register\n    Login\n  \n\n\n    \n\n    \n                \n                    ./register.component.css\n                \n                .register-container {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n}\n\n.register-container form {\n  max-width: 20rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Full Name            Username            Password          Register    Login  '\n    var COMPONENTS = [{'name': 'AlertComponent', 'selector': 'app-alert'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotificationComponent', 'selector': 'app-notification'},{'name': 'NotificationDetailComponent', 'selector': 'app-notification-detail'},{'name': 'NotificationGeneratorComponent', 'selector': 'app-notification-generator'},{'name': 'PageTitleComponent', 'selector': 'app-page-title'},{'name': 'RegisterComponent', 'selector': 'app-register'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/User.ts\n        \n\n            \n                Description\n            \n            \n                This class keeps information of a logged in user\nIt is used within user service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                FullName\n                            \n                            \n                                    Public\n                                Password\n                            \n                            \n                                    Public\n                                Username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            FullName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/User.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  public _id: string;\n  public FullName: string;\n  public Username: string;\n  public Password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotification.html":{"url":"classes/UserNotification.html","title":"class - UserNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/UserNotification.ts\n        \n\n            \n                Description\n            \n            \n                This class is model for notifications\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _id\n                            \n                            \n                                    Public\n                                Body\n                            \n                            \n                                    Public\n                                Category\n                            \n                            \n                                    Public\n                                Date\n                            \n                            \n                                    Public\n                                Header\n                            \n                            \n                                    Public\n                                IsClosed\n                            \n                            \n                                    Public\n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/UserNotification.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            Header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            IsClosed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            UserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/UserNotification.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Category} from './Category';\n\n\n/**\n * This class is model for notifications\n */\n\nexport class UserNotification {\n  public _id: string;\n  public Header: string;\n  public Body: string;\n  public Category: Category;\n  public IsClosed: boolean;\n  public UserId: string;\n  public Date: number;\n\n  constructor(userId: string) {\n    this.Header = '';\n    this.Body = '';\n    this.Category = Category.INFO;\n    this.IsClosed = false;\n    this.UserId = userId;\n    this.Date = Date.now();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                Get\n                            \n                            \n                                IsAuthenticated\n                            \n                            \n                                Login\n                            \n                            \n                                Logout\n                            \n                            \n                                Register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, cookieService: CookieService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cookieService\n                                                  \n                                                        \n                                                                    CookieService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Get\n                        \n                        \n                    \n                \n            \n            \n                \nGet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IsAuthenticated\n                        \n                        \n                    \n                \n            \n            \n                \nIsAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Login\n                        \n                        \n                    \n                \n            \n            \n                \nLogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Logout\n                        \n                        \n                    \n                \n            \n            \n                \nLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Register\n                        \n                        \n                    \n                \n            \n            \n                \nRegister(fullName: string, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/user.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fullName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/user.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../models/User';\nimport {Observable, of} from 'rxjs';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {tap} from 'rxjs/operators';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\nimport {APIRoutes} from '../api-routes';\nimport {Alert} from '../models/Alert';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private user: User = null; // this keeps information of user\n\n  constructor(private http: HttpClient, private cookieService: CookieService, public router: Router) {\n    const cookie = this.cookieService.get('NotificationsTestUser');\n    if (cookie !== '') {\n      this.user = JSON.parse(this.cookieService.get('NotificationsTestUser'));\n    }\n  }\n\n  IsAuthenticated(): boolean {\n    return this.user !== null;\n  }\n\n  Get(): User {\n    return this.user;\n  }\n\n  Login(username: string, password: string): Observable {\n    return this.http.post(APIRoutes.USER_LOGIN, { Username: username, Password: password}, httpOptions).pipe(\n      tap(userProfile => {\n        if (userProfile !== null) {\n          this.user = userProfile;\n          console.log(this.user);\n          this.cookieService.set('NotificationsTestUser', JSON.stringify(userProfile), 1);\n        }\n      })\n    );\n  }\n\n  Register(fullName: string, username: string, password: string): Observable {\n    return this.http.post(APIRoutes.USER_REGISTER, { FullName: fullName, Username: username, Password: password }, httpOptions);\n  }\n\n  Logout(): boolean {\n    try {\n      this.cookieService.delete('NotificationsTestUser');\n      this.user = null;\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/api-routes.ts\n            \n            class\n            APIRoutes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/common/helper.ts\n            \n            class\n            Helper\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/common/page-title/page-title.component.ts\n            \n            component\n            PageTitleComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/alert/alert.component.ts\n            \n            component\n            AlertComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/components/notification-detail/notification-detail.component.ts\n            \n            component\n            NotificationDetailComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/components/notification-generator/notification-generator.component.ts\n            \n            component\n            NotificationGeneratorComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/components/notification/notification.component.ts\n            \n            component\n            NotificationComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/models/Alert.ts\n            \n            class\n            Alert\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/models/User.ts\n            \n            class\n            User\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/models/UserNotification.ts\n            \n            class\n            UserNotification\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/services/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/notification.service.ts\n            \n            variable\n            INFO_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            variable\n            httpOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~7.2.0\n        \n            @angular/cdk : ~7.3.5\n        \n            @angular/common : ~7.2.0\n        \n            @angular/compiler : ~7.2.0\n        \n            @angular/core : ~7.2.0\n        \n            @angular/forms : ~7.2.0\n        \n            @angular/material : ^7.3.5\n        \n            @angular/platform-browser : ~7.2.0\n        \n            @angular/platform-browser-dynamic : ~7.2.0\n        \n            @angular/router : ~7.2.0\n        \n            @ng-bootstrap/ng-bootstrap : ^4.1.0\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            hammerjs : ^2.0.8\n        \n            ngx-bootstrap : ^3.2.0\n        \n            ngx-cookie-service : ^2.1.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Category   (src/.../Category.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/Category.ts\n    \n        \n            \n                \n                    \n                        \n                        Category\n                    \n                \n                    \n                        \n                            this enum defines notification categories\n\n                        \n                    \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontend\nThis project was generated with Angular CLI version 7.3.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAlertComponent\n\nAlertComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNotificationComponent\n\nNotificationComponent\n\nAppModule -->\n\nNotificationComponent->AppModule\n\n\n\n\n\nNotificationDetailComponent\n\nNotificationDetailComponent\n\nAppModule -->\n\nNotificationDetailComponent->AppModule\n\n\n\n\n\nNotificationGeneratorComponent\n\nNotificationGeneratorComponent\n\nAppModule -->\n\nNotificationGeneratorComponent->AppModule\n\n\n\n\n\nPageTitleComponent\n\nPageTitleComponent\n\nAppModule -->\n\nPageTitleComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpOptions   (src/.../notification.service.ts)\n                        \n                        \n                            httpOptions   (src/.../user.service.ts)\n                        \n                        \n                            INFO_TIMEOUT   (src/.../notification.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/notification.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INFO_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 90000\n                        \n                    \n\n\n            \n        \n\n    src/app/services/user.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
